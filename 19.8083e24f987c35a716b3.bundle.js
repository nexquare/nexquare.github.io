(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{1421:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return SkillsService}));var _a,tslib__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(1),_angular_core__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(0),_api_service__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(217);let SkillsService=class SkillsService{constructor(apiService){this.apiService=apiService,this.skill_sub_url="controller/api/skill"}getSkillsList(){return this.apiService.get("controller/api/courses/components/skills")}getSkill(skillId){return this.apiService.get(`${this.skill_sub_url}/${skillId}`)}createSkill(competencyId,data){return this.apiService.post(`${this.skill_sub_url}/competencies/${competencyId}`,data)}updateSkills(competencyId,data){return this.apiService.put(`${this.skill_sub_url}/competencies/${competencyId}`,data)}getSkillsListForCourse(courseId){return this.apiService.get(`${this.skill_sub_url}/learning-contents/${courseId}`)}getSkillsListForCompetency(competencyId){return this.apiService.get(`${this.skill_sub_url}/competencies/${competencyId}`)}deleteSkill(skillId){return this.apiService.delete(`${this.skill_sub_url}/${skillId}`,null,!0,null,!0,"application/text")}};SkillsService=Object(tslib__WEBPACK_IMPORTED_MODULE_0__.c)([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__.Injectable)({providedIn:"root"}),Object(tslib__WEBPACK_IMPORTED_MODULE_0__.f)("design:paramtypes",["function"==typeof(_a=void 0!==_api_service__WEBPACK_IMPORTED_MODULE_2__.a&&_api_service__WEBPACK_IMPORTED_MODULE_2__.a)?_a:Object])],SkillsService)},1667:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_exports__.default='<nxq-manage-header [headerSettings]="headerSettings">\n  <div class="container">\n    \x3c!--  <div class="filters">--\x3e\n    \x3c!--    <nxq-filters [filterOptions]="filterOptions"></nxq-filters>--\x3e\n    \x3c!--  </div>--\x3e\n\n    <div class="table" *ngIf="!isLoading">\n      <nxq-table\n        (actionClicked)="actionClicked($event)"\n        [tableHeaders]="headers"\n        [tableData]="filteredData"\n        (filtersChanged)="filters($event)"\n        [searchPlaceholder]="\'SEARCH_COMPETENCIES\' | translate"\n      ></nxq-table>\n    </div>\n    <nz-modal\n      [(nzVisible)]="showModal"\n      [nzContent]="modalContent"\n      [nzFooter]="modalFooter"\n      (nzOnCancel)="onCancel()"\n      nzWidth="400px"\n      nzHeight="300px"\n      class="confirm-popup"\n      nzClassName="confirm-modal"\n    >\n      <ng-template #modalContent>\n        {{ \'DELETE_MESSAGE\' | translate }}\n      </ng-template>\n\n      <ng-template #modalFooter>\n        <nxq-button type="primary" (click)="onCancel()">{{ \'CANCEL\' | translate }}</nxq-button>\n        <nxq-button type="secondary" (click)="onConfirm()">{{ \'CONFIRM\' | translate }}</nxq-button>\n      </ng-template>\n    </nz-modal>\n    <div class="footer" *ngIf="!isLoading">\n      <div class="buttons">\n        <nxq-button *ngIf="editAllowed" type="primary" (click)="createNew()">{{ \'CREATE_NEW\' | translate }}</nxq-button>\n        <nxq-button *ngIf="addFromMasterAllowed" type="primary" (click)="addNew()">{{ \'ADD_NEW_FROM_MASTER\' | translate }}</nxq-button>\n        <nxq-button *ngIf="createMasterAllowed" type="primary" (click)="createNewMaster()">{{\n          \'CREATE_NEW_MASTER\' | translate\n        }}</nxq-button>\n      </div>\n    </div>\n    <div class="nxq-spinner-cp" *ngIf="isLoading">\n      <nxq-loading></nxq-loading>\n    </div>\n    <nz-drawer\n      [nzBodyStyle]="{ height: \'calc(100% - 55px)\', overflow: \'auto\', \'padding-bottom\': \'70px\' }"\n      [nzClosable]="false"\n      [nzMaskClosable]="true"\n      [nzWidth]="\'75vw\'"\n      [nzVisible]="visibleCreate || visibleCreateMaster || visibleAdd"\n      [nzTitle]="\'\'"\n      (nzOnClose)="onClose()"\n    >\n      <div class="side-drawer">\n        <nxq-create-new-competency\n          [selectedCompetency]="selectedCompetency"\n          *ngIf="editAllowed && visibleCreate"\n          (visible)="onCancelCreate($event)"\n          (competencyCreatedOrModified)="competencyCreatedOrModified($event)"\n          (formIsDirty)="formDirtyStateChanged($event)"\n        ></nxq-create-new-competency>\n        <nxq-create-new-master-competency\n          (visible)="onCancelCreateMaster($event)"\n          *ngIf="createMasterAllowed && visibleCreateMaster"\n          (formIsDirty)="formDirtyStateChanged($event)"\n        ></nxq-create-new-master-competency>\n        <nxq-add-competency (visible)="onCancelAdd($event)" *ngIf="addFromMasterAllowed && visibleAdd"></nxq-add-competency>\n      </div>\n    </nz-drawer>\n\n    \x3c!--  Popup--\x3e\n    <div *ngIf="!!showAdd" class="tenant-types__add">\n      <div class="header">\n        <span>{{ \'ADD_NEW_TENANT_TYPE\' | translate }}</span>\n      </div>\n\n      <nz-divider></nz-divider>\n\n      <form [formGroup]="form" class="tenant-types-add-form">\n        <div class="form-input">\n          <span class="form-label">{{ \'NAME\' | translate | uppercase }}</span>\n          <nxq-input-master [control]="controls.name" [placeholder]="\'NAME\' | translate"></nxq-input-master>\n        </div>\n\n        <div class="form-input">\n          <span class="form-label">{{ \'DESCRIPTION\' | translate | uppercase }}</span>\n          <nxq-input-master [control]="controls.description" [placeholder]="\'DESCRIPTION\' | translate"></nxq-input-master>\n        </div>\n      </form>\n\n      <div class="footer">\n        <nxq-button [type]="buttonType.PRIMARY" (click)="onClose()">{{ \'CANCEL\' | translate }}</nxq-button>\n        <nxq-button [type]="buttonType.SECONDARY" (submit)="addCompetencies()">{{ \'ADD\' | translate }}</nxq-button>\n      </div>\n    </div>\n\n    <nz-modal\n      [(nzVisible)]="showFormDirtyModal"\n      [nzContent]="modalContents"\n      [nzFooter]="modalFooters"\n      (nzOnCancel)="onCancelPopup()"\n      nzWidth="400px"\n      nzHeight="300px"\n      class="confirm-popup"\n      nzClassName="confirm-modal"\n    >\n      <ng-template #modalContents>\n        You have unsaved data in the form, Are you sure you want to discard the changes?\n      </ng-template>\n\n      <ng-template #modalFooters>\n        <nxq-button type="primary" (click)="onCancelPopup()">Cancel</nxq-button>\n        <nxq-button type="secondary" (click)="onConfirmPopup()">Confirm</nxq-button>\n      </ng-template>\n    </nz-modal>\n  </div>\n</nxq-manage-header>\n'},1668:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_exports__.default="/* These mixins are replacement of Flex Layout*/\n.container {\n  padding: 20px 30px 0 30px;\n  margin-bottom: 30px;\n}\n.container .header {\n  margin: 12px 0 30px 0;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  align-content: center;\n}\n:host-context(.xs) .container .header, .xs .container .header, :host-context(.sm) .container .header, .sm .container .header {\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: flex-start;\n  align-content: flex-start;\n}\n:host-context(.xs) .container .header > *, .xs .container .header > *, :host-context(.sm) .container .header > *, .sm .container .header > * {\n  margin-bottom: 12px;\n}\n:host-context(.xs) .container .header > *:last-child, .xs .container .header > *:last-child, :host-context(.sm) .container .header > *:last-child, .sm .container .header > *:last-child {\n  margin-bottom: 0;\n}\n:host-context(.xs) .container .header h1, .xs .container .header h1 {\n  font-size: 32px;\n  line-height: 32px;\n}\n.container .filters {\n  margin-bottom: 30px;\n}\n:host-context(.xs) .container .filters, .xs .container .filters {\n  width: 92.5vw;\n}\n.container .table {\n  margin-bottom: 30px;\n  max-height: 550px;\n  overflow-y: scroll;\n}\n:host-context(.xs) .container .table, .xs .container .table {\n  overflow-x: scroll;\n  width: 92.5vw;\n}\n.container .footer {\n  display: flex;\n  flex-direction: row;\n}\n.container .footer .buttons {\n  display: flex;\n  flex-direction: row;\n}\n.container .footer .buttons > * {\n  margin-right: 20px;\n}\n.container .footer .buttons > *:last-child {\n  margin-right: 0;\n}\n:host-context(.xs) .container .footer .buttons, .xs .container .footer .buttons {\n  display: flex;\n  flex-direction: column;\n}\n:host-context(.xs) .container .footer .buttons > *, .xs .container .footer .buttons > * {\n  margin-bottom: 10px;\n}\n:host-context(.xs) .container .footer .buttons > *:last-child, .xs .container .footer .buttons > *:last-child {\n  margin-bottom: 0;\n}\n.container .create-new,\n.container .add-new {\n  margin-top: 30px;\n}\n.container .nxq-spinner-cp {\n  position: absolute;\n  top: 10%;\n  left: 10%;\n}"},1669:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_exports__.default='<div class="create-competency">\n  <div class="header">\n    <span>{{ \'CREATE_NEW\' | translate }}</span>\n  </div>\n\n  <div class="header-form">\n    <form [formGroup]="form" class="form" #formElement>\n      <div class="input-container width">\n        <nxq-label labelType="code" [value]="\'NAME\' | translate | uppercase"></nxq-label>\n        <nxq-input-master [control]="controls.competencyName" [placeholder]="\'NAME\' | translate"></nxq-input-master>\n      </div>\n\n      <div class="input-container">\n        <nxq-label labelType="code" [value]="\'VERSION\' | translate | uppercase"></nxq-label>\n        <nxq-input-master [control]="controls.version" [placeholder]="\'VERSION\' | translate"></nxq-input-master>\n      </div>\n    </form>\n  </div>\n\n  <nz-divider></nz-divider>\n\n  <div class="content">\n    <div class="body-sidenav">\n      <nxq-label labelType="code" [value]="\'CREATE_SKILLS\' | translate | uppercase"></nxq-label>\n      <nxq-sub-menu-editable\n        [dataTree]="subMenuWithCompetency"\n        [selectedId]="selectedSkill.id"\n        (selectClicked)="selectClicked($event)"\n        (addClicked)="addClicked($event)"\n        (deleteClicked)="deleteClicked($event)"\n      >\n      </nxq-sub-menu-editable>\n      <nxq-control-error *ngIf="skillErrorVisible" [errorMessage]="\'SKILLS_REQUIRED\' | translate"></nxq-control-error>\n    </div>\n    <div class="body-content">\n      <div class="container" *ngIf="!ManagerUtils.isEmptyObjectOrNull(selectedSkill)">\n        <form [formGroup]="skillForm" class="form" #skillsForm>\n          <div class="input-container" *ngIf="selectedSkill.id !== -1">\n            <nxq-label class="label" labelType="code" [value]="\'TITLE\' | translate | uppercase"></nxq-label>\n            <nxq-input-master [control]="skillControls.name" [placeholder]="\'TITLE\' | translate"></nxq-input-master>\n          </div>\n\n          <div class="input-container">\n            <nxq-label class="label" labelType="code" [value]="\'DESCRIPTION\' | translate | uppercase"></nxq-label>\n            <quill-editor\n              [formControl]="skillControls.description"\n              [placeholder]="\'DESCRIPTION\' | translate"\n              theme="bubble"\n              [styles]="{ height: \'145px\' }"\n            ></quill-editor>\n          </div>\n\n          <div class="input-container">\n            <nxq-label class="label" labelType="code" [value]="\'LINKED_SKILLS\' | translate | uppercase"></nxq-label>\n            <div class="select">\n              <nxq-tree-select\n                [control]="skillControls.linkedSkills"\n                [nodes]="skillOptions"\n                [allowMultiSelect]="true"\n                [dropDownStyle]="{ maxHeight: \'200px\', overflowY: \'scroll\' }"\n              ></nxq-tree-select>\n            </div>\n          </div>\n        </form>\n      </div>\n\n      <nz-empty *ngIf="!!ManagerUtils.isEmptyObjectOrNull(selectedSkill)" [nzNotFoundContent]="\'SELECT_OR_ADD_SKILL\' | translate">\n      </nz-empty>\n    </div>\n  </div>\n</div>\n\n<div class="buttons">\n  <nxq-button type="primary" (click)="cancel()">{{ \'CANCEL\' | translate }}</nxq-button>\n  <nxq-button\n    type="secondary"\n    [disabled]="disableCreate"\n    (click)="updating ? updateCompetencyClicked(formElement) : createCompetencyClicked(formElement)"\n  >\n    {{ updating ? (\'SAVE\' | translate) : (\'CREATE\' | translate) }}\n  </nxq-button>\n</div>\n'},1670:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_exports__.default="/* These mixins are replacement of Flex Layout*/\n.create-competency .header {\n  font-weight: bold;\n  font-size: 22px;\n  line-height: 22px;\n  color: #2373ff;\n  margin-bottom: 20px;\n}\n.create-competency .header-form .form {\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n}\n.create-competency .header-form .form > * {\n  margin-right: 10px;\n}\n.create-competency .header-form .form > *:last-child {\n  margin-right: 0;\n}\n.create-competency .header-form .form .input-container {\n  display: flex;\n  flex-direction: column;\n}\n.create-competency .header-form .form .input-container > * {\n  margin-bottom: 10px;\n}\n.create-competency .header-form .form .input-container > *:last-child {\n  margin-bottom: 0;\n}\n.create-competency .header-form .form .input-container.width {\n  width: 85%;\n}\n.create-competency .content {\n  display: flex;\n  flex-direction: row;\n}\n.create-competency .content > * {\n  margin-right: 15px;\n}\n.create-competency .content > *:last-child {\n  margin-right: 0;\n}\n.create-competency .content .body-sidenav {\n  width: 60%;\n  border-right: 1px solid #d9d9d9;\n  padding-bottom: 20px;\n  max-width: 65vh;\n  overflow: scroll;\n}\n.create-competency .content .body-content {\n  width: 40%;\n  margin-top: 20px;\n}\n.create-competency .content .body-content .container .form {\n  display: flex;\n  flex-direction: column;\n}\n.create-competency .content .body-content .container .form > * {\n  margin-bottom: 10px;\n}\n.create-competency .content .body-content .container .form > *:last-child {\n  margin-bottom: 0;\n}\n.create-competency .content .body-content .container .form .input-container {\n  display: flex;\n  flex-direction: column;\n}\n.create-competency .content .body-content .container .form .input-container > * {\n  margin-bottom: 10px;\n}\n.create-competency .content .body-content .container .form .input-container > *:last-child {\n  margin-bottom: 0;\n}\n.create-competency .content .body-content .container .form .input-container .select {\n  min-width: 210px;\n}\n.create-competency .content .body-content .container .form .input-container .buttons {\n  display: flex;\n  flex-direction: row;\n}\n.create-competency .content .body-content .container .form .input-container .buttons > * {\n  margin-right: 15px;\n}\n.create-competency .content .body-content .container .form .input-container .buttons > *:last-child {\n  margin-right: 0;\n}\n.buttons {\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-end;\n  align-items: center;\n  align-content: center;\n  padding: 10px 20px 10px 20px;\n  background: #ffffff;\n  position: absolute;\n  right: 0px;\n  bottom: 0px;\n  border-top: 1px solid lightgray;\n  box-shadow: 0px 0px 10px 2px rgba(187, 187, 187, 0.7);\n  z-index: 1;\n}\n.buttons > * {\n  margin-right: 13px;\n}\n.buttons > *:last-child {\n  margin-right: 0;\n}"},1671:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_exports__.default='<div class="add-competency">\n  <div class="header">\n    <span>{{ \'ADD_NEW_FROM_MASTER\' | translate }}</span>\n  </div>\n\n  <div class="content">\n    <div class="table">\n      <nxq-table\n        [tableData]="filteredData"\n        [tableHeaders]="headers"\n        [enableSelect]="true"\n        (actionClicked)="actionClicked($event)"\n        (filtersChanged)="filters($event)"\n        (rowsSelected)="rowSelected($event)"\n      ></nxq-table>\n    </div>\n    <nz-drawer\n      [nzBodyStyle]="{ height: \'calc(100% - 55px)\', overflow: \'auto\', \'padding-bottom\': \'70px\' }"\n      [nzClosable]="false"\n      [nzMaskClosable]="true"\n      [nzWidth]="\'75vw\'"\n      [nzVisible]="showPreview"\n      [nzTitle]="\'\'"\n      (nzOnClose)="onCancelPreview()"\n    >\n      <div class="side-drawer">\n        <nxq-create-new-master-competency\n          (visible)="onCancelPreview()"\n          *ngIf="showPreview"\n          [previewData]="previewData"\n        ></nxq-create-new-master-competency>\n      </div>\n    </nz-drawer>\n  </div>\n\n  <div class="bottom-buttons">\n    <nxq-button type="primary" (click)="cancel()">{{ \'CANCEL\' | translate }}</nxq-button>\n    <nxq-button type="secondary" (click)="onAdd()">{{ \'ADD\' | translate }}</nxq-button>\n  </div>\n</div>\n'},1672:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_exports__.default="/* These mixins are replacement of Flex Layout*/\n.add-competency .header {\n  font-weight: bold;\n  font-size: 22px;\n  line-height: 22px;\n  color: #2373ff;\n}\n.add-competency .filter {\n  margin: 20px 0;\n}\n.add-competency .content {\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 50px;\n}\n.add-competency .content > * {\n  margin-bottom: 20px;\n}\n.add-competency .content > *:last-child {\n  margin-bottom: 0;\n}\n.bottom-buttons {\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-end;\n  align-items: center;\n  align-content: center;\n  padding: 10px 20px 10px 20px;\n  background: #ffffff;\n  position: absolute;\n  right: 0px;\n  bottom: 0px;\n  border-top: 1px solid lightgray;\n  box-shadow: 0px 0px 10px 2px rgba(187, 187, 187, 0.7);\n  z-index: 1;\n}\n.bottom-buttons > * {\n  margin-right: 13px;\n}\n.bottom-buttons > *:last-child {\n  margin-right: 0;\n}"},1673:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_exports__.default='<div class="create-competency">\n  <div class="header">\n    <span *ngIf="!previewData">{{ \'CREATE_NEW_MASTER\' | translate }}</span>\n    <span *ngIf="!!previewData">{{ \'PREVIEW\' | translate }}</span>\n  </div>\n\n  <div class="header-form">\n    <form [formGroup]="form" class="form" #formElement>\n      <div class="form-row">\n        <div class="input-container width">\n          <nxq-label labelType="code" [value]="\'NAME\' | translate | uppercase"></nxq-label>\n          <nxq-input-master [control]="controls.competencyName" [placeholder]="\'NAME\' | translate"></nxq-input-master>\n        </div>\n\n        <div class="input-container">\n          <nxq-label labelType="code" [value]="\'VERSION\' | translate | uppercase"></nxq-label>\n          <nxq-input-master [control]="controls.version" [placeholder]="\'VERSION\' | translate"></nxq-input-master>\n        </div>\n      </div>\n\n      <div class="input-container">\n        <nxq-label labelType="code" [value]="\'CREATOR\' | translate | uppercase"></nxq-label>\n        <nxq-input-master [control]="controls.creator" [placeholder]="\'CREATOR\' | translate"></nxq-input-master>\n      </div>\n    </form>\n  </div>\n\n  <nz-divider></nz-divider>\n\n  <div class="content">\n    <div class="body-sidenav">\n      <nxq-label labelType="code" [value]="\'CREATE_SKILLS\' | translate | uppercase"></nxq-label>\n      <nxq-sub-menu-editable\n        [dataTree]="subMenuWithCompetency"\n        [selectedId]="selectedSkill.id"\n        (selectClicked)="selectClicked($event)"\n        (addClicked)="addClicked($event)"\n        (deleteClicked)="deleteClicked($event)"\n      >\n      </nxq-sub-menu-editable>\n      <nxq-control-error *ngIf="skillErrorVisible" [errorMessage]="\'SKILLS_REQUIRED\' | translate"></nxq-control-error>\n    </div>\n    <div class="body-content">\n      <div class="container" *ngIf="!ManagerUtils.isEmptyObjectOrNull(selectedSkill)">\n        <form [formGroup]="form" class="form" #skillsForm>\n          <div class="input-container" *ngIf="selectedSkill.id !== -1">\n            <nxq-label class="label" labelType="code" [value]="\'TITLE\' | translate | uppercase"></nxq-label>\n            <nxq-input-master [control]="skillControls.name" [placeholder]="\'TITLE\' | translate"></nxq-input-master>\n          </div>\n\n          <div class="input-container">\n            <nxq-label class="label" labelType="code" [value]="\'DESCRIPTION\' | translate | uppercase"></nxq-label>\n            <quill-editor\n              [formControl]="skillControls.description"\n              [placeholder]="\'DESCRIPTION\' | translate"\n              theme="bubble"\n              [styles]="{ height: \'145px\' }"\n            ></quill-editor>\n          </div>\n\n          <div class="input-container" *ngIf="selectedSkill.id !== -1">\n            <nxq-label class="label" labelType="code" [value]="\'LINKED_SKILLS\' | translate | uppercase"></nxq-label>\n            <div class="select">\n              <nxq-tree-select\n                [control]="skillControls.linkedSkills"\n                [nodes]="skillOptions"\n                [allowMultiSelect]="true"\n                [dropDownStyle]="{ maxHeight: \'200px\', overflowY: \'scroll\' }"\n              ></nxq-tree-select>\n            </div>\n          </div>\n        </form>\n      </div>\n\n      <nz-empty *ngIf="!!ManagerUtils.isEmptyObjectOrNull(selectedSkill)" [nzNotFoundContent]="\'SELECT_OR_ADD_SKILL\' | translate">\n      </nz-empty>\n    </div>\n  </div>\n\n  <div class="buttons">\n    <nxq-button type="primary" (click)="cancel()">{{ \'CANCEL\' | translate }}</nxq-button>\n    <nxq-button type="secondary" (click)="createCompetencyClicked(formElement)" *ngIf="!previewData">{{ \'CREATE\' | translate }}</nxq-button>\n  </div>\n</div>\n'},1674:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_exports__.default="/* These mixins are replacement of Flex Layout*/\n.create-competency .header {\n  font-weight: bold;\n  font-size: 22px;\n  line-height: 22px;\n  color: #2373ff;\n  margin-bottom: 20px;\n}\n.create-competency .header-form .form {\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n}\n.create-competency .header-form .form > * {\n  margin-bottom: 10px;\n}\n.create-competency .header-form .form > *:last-child {\n  margin-bottom: 0;\n}\n.create-competency .header-form .form .input-container {\n  display: flex;\n  flex-direction: column;\n}\n.create-competency .header-form .form .input-container > * {\n  margin-bottom: 10px;\n}\n.create-competency .header-form .form .input-container > *:last-child {\n  margin-bottom: 0;\n}\n.create-competency .header-form .form-row {\n  display: flex;\n  flex-direction: row;\n}\n.create-competency .header-form .form-row > * {\n  margin-right: 10px;\n}\n.create-competency .header-form .form-row > *:last-child {\n  margin-right: 0;\n}\n.create-competency .header-form .form-row .input-container {\n  display: flex;\n  flex-direction: column;\n}\n.create-competency .header-form .form-row .input-container > * {\n  margin-bottom: 10px;\n}\n.create-competency .header-form .form-row .input-container > *:last-child {\n  margin-bottom: 0;\n}\n.create-competency .header-form .form-row .input-container.width {\n  width: 80%;\n}\n.create-competency .content {\n  display: flex;\n  flex-direction: row;\n  margin-bottom: 30px;\n}\n.create-competency .content > * {\n  margin-right: 15px;\n}\n.create-competency .content > *:last-child {\n  margin-right: 0;\n}\n.create-competency .content .body-sidenav {\n  width: 60%;\n  border-right: 1px solid #d9d9d9;\n  padding-bottom: 20px;\n  max-width: 65vh;\n  overflow: scroll;\n}\n.create-competency .content .body-content {\n  width: 40%;\n  margin-top: 20px;\n  padding-bottom: 20px;\n}\n.buttons {\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-end;\n  align-items: center;\n  align-content: center;\n  padding: 10px 20px 10px 20px;\n  background: #ffffff;\n  position: absolute;\n  right: 0px;\n  bottom: 0px;\n  border-top: 1px solid lightgray;\n  box-shadow: 0px 0px 10px 2px rgba(187, 187, 187, 0.7);\n  z-index: 1;\n}\n.buttons > * {\n  margin-right: 13px;\n}\n.buttons > *:last-child {\n  margin-right: 0;\n}"},1712:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"ManageCompetenciesModule",(function(){return ManageCompetenciesModule}));var _a,tslib_es6=__webpack_require__(1),core=__webpack_require__(0),common=__webpack_require__(6),shared_module=__webpack_require__(587),router=__webpack_require__(35),fesm5_forms=__webpack_require__(5),public_api=__webpack_require__(12),api_service=__webpack_require__(217),http=__webpack_require__(27),tap=__webpack_require__(73);let competencies_service_CompetenciesService=class CompetenciesService{constructor(apiService){this.apiService=apiService,this.competency_sub_url="controller/api/competency"}getCompetenciesList(){const headers=(new http.e).set("Content-type","application/json");return this.apiService.get(""+this.competency_sub_url,null,!0,headers)}getCompetency(competencyId){return this.apiService.get(`${this.competency_sub_url}/${competencyId}`)}createCompetency(data){return this.apiService.post(""+this.competency_sub_url,data)}updateCompetency(data){return this.apiService.put(""+this.competency_sub_url,data)}deleteCompetency(data){return this.apiService.deleteWithData(""+this.competency_sub_url,data,!0,null,!0,"application/text").pipe(Object(tap.a)(val=>console.log(val)))}duplicateCompetency(competencyId){return this.apiService.post(`${this.competency_sub_url}/duplicate/${competencyId}`,null)}addFromMasterCompetency(competencyId){return this.apiService.post(`${this.competency_sub_url}/${competencyId}/add`,null)}};competencies_service_CompetenciesService=Object(tslib_es6.c)([Object(core.Injectable)({providedIn:"root"}),Object(tslib_es6.f)("design:paramtypes",["function"==typeof(_a=void 0!==api_service.a&&api_service.a)?_a:Object])],competencies_service_CompetenciesService);var manage_competencies_component_a,_b,_c,translate_pipe=__webpack_require__(215),utils=__webpack_require__(586),privilege_utils=__webpack_require__(87),privilege_enum=__webpack_require__(47),ng_zorro_antd_message=__webpack_require__(185);let manage_competencies_component_ManageCompetenciesComponent=class ManageCompetenciesComponent{constructor(competencyService,translatePipe,messageService){this.competencyService=competencyService,this.translatePipe=translatePipe,this.messageService=messageService,this.headerSettings={pageTitle:this.translatePipe.transform("MANAGE_COMPETENCIES"),tagLine:this.translatePipe.transform("MANAGE_COMPETENCIES_HERE")},this.visibleCreate=!1,this.visibleAdd=!1,this.visibleCreateMaster=!1,this.isLoading=!0,this.breadcrumbs=[{url:"manage-learning-pathway",label:this.translatePipe.transform("MANAGE_LEARNING_PATHWAY")}],this.headers=[{title:this.translatePipe.transform("NAME").toUpperCase(),type:public_api.s.TEXT,property:"competencyName",customColumnClass:"text-bold"},{title:this.translatePipe.transform("VERSION").toUpperCase(),type:public_api.s.TEXT,property:"version"},{title:this.translatePipe.transform("CREATOR").toUpperCase(),type:public_api.s.TEXT,property:"creator"},{title:this.translatePipe.transform("ACTIONS").toUpperCase(),type:public_api.s.ACTIONS,property:"actions",actions:[{title:this.translatePipe.transform("EDIT").toUpperCase(),type:public_api.r.BUTTON,value:"edit"},{title:"close-circle",type:public_api.r.ICON,value:"close-circle"}]}],this.editAllowed=privilege_utils.a.hasViewPrivileges([privilege_enum.a.SETTING,privilege_enum.a.MANAGE_LEARNING,privilege_enum.a.COMPETENCIES,privilege_enum.a.ALL_PAGES,privilege_enum.a.EDIT]),this.addFromMasterAllowed=privilege_utils.a.hasViewPrivileges([privilege_enum.a.SETTING,privilege_enum.a.MANAGE_LEARNING,privilege_enum.a.COMPETENCIES,privilege_enum.a.ALL_PAGES,privilege_enum.a.ADD_FROM_MASTER_COMPETENCY]),this.createMasterAllowed=privilege_utils.a.hasViewPrivileges([privilege_enum.a.SETTING,privilege_enum.a.MANAGE_LEARNING,privilege_enum.a.COMPETENCIES,privilege_enum.a.ALL_PAGES,privilege_enum.a.CREATE_MASTER_COMPETENCY]),this.data=[],this.filteredData=[],this.formIsDirty=!1,this.showAdd=!1,this.buttonType=public_api.c,this.controls={name:new fesm5_forms.FormControl(""),description:new fesm5_forms.FormControl("")},this.selectedCompetency=null,this.form=new fesm5_forms.FormGroup(this.controls)}ngOnInit(){this.competencyService.getCompetenciesList().subscribe(value=>{this.data=this.filterPrivateCompetencies(value),this.filteredData=this.data,this.filteredData&&(this.isLoading=!1)}),this.editAllowed||(this.headers=this.headers.filter(s=>s.type!==public_api.s.ACTIONS))}addCompetencies(){console.log("popup open"),this.showAdd=!0,this.form=new fesm5_forms.FormGroup({name:new fesm5_forms.FormControl(""),short_code:new fesm5_forms.FormControl(""),course_period:new fesm5_forms.FormControl(""),enrollment_period:new fesm5_forms.FormControl(""),role:new fesm5_forms.FormControl("")}),console.log("popup open")}onClose(){this.formIsDirty?this.showFormDirtyModal=!0:(this.showAdd=!1,this.visibleCreate=!1,this.visibleCreateMaster=!1)}createNew(){this.selectedCompetency={},this.visibleAdd=!1,this.visibleCreateMaster=!1,this.visibleCreate=!0}createNewMaster(){this.visibleAdd=!1,this.visibleCreate=!1,this.visibleCreateMaster=!0}addNew(){this.visibleCreate=!1,this.visibleCreateMaster=!1,this.visibleAdd=!0}onCancelAdd(event){this.visibleAdd=event}onCancelCreate(event){this.selectedCompetency=null,this.visibleCreate=event}filterPrivateCompetencies(competency){return competency.filter(value=>"Private"===value.type).map(c=>{const actions={edit:!c.addedFromMaster};return Object.assign(Object.assign({},c),{actions:actions})})}onCancelCreateMaster(event){this.visibleCreateMaster=event}actionClicked(event){if("edit"===event.value&&(this.visibleCreate=!0,this.selectedCompetency=event.data),"close-circle"===event.value){this.showModal=!0;const competency={id:+event.data.id};this.deleteData=competency}}filters(event){event.search?this.filteredData=[...this.data.filter(item=>item.competencyName.toLowerCase().includes(event.search.toLowerCase())||item.creator&&item.creator.toLowerCase().includes(event.search.toLowerCase())||item.version.toLowerCase().includes(event.search.toLowerCase()))]:this.filteredData=[...this.data],event.sortBy&&(this.data=utils.a.sortByMultipleValues(this.data,event.sortBy))}competencyCreatedOrModified(event){const index=this.data.indexOf(this.data.find(x=>x.id===event.id));-1!==index?this.data[index]=event:this.data=[...this.data,event],console.log(this.data,index,event),this.filteredData=[...this.data]}onCancel(){this.showModal=!1}onConfirm(){this.competencyService.deleteCompetency(this.deleteData).subscribe(value=>{this.data=this.data.filter(val=>val.id!==this.deleteData.id),this.filteredData=[...this.data],this.showModal=!1,this.messageService.success(this.translatePipe.transform("COMPETENCIES_DELETED_SUCCESSFULLY"))})}onCancelPopup(){this.showFormDirtyModal=!1}onConfirmPopup(){this.showFormDirtyModal=!1,this.visibleCreate=!1,this.visibleCreateMaster=!1,this.formIsDirty=!1}formDirtyStateChanged(event){this.formIsDirty=event}};manage_competencies_component_ManageCompetenciesComponent=Object(tslib_es6.c)([Object(core.Component)({selector:"nxq-manage-competencies",template:(__webpack_require__(1667).default||__webpack_require__(1667)).length?__webpack_require__(1667).default||__webpack_require__(1667):"",styles:[(__webpack_require__(1668).default||__webpack_require__(1668)).length?__webpack_require__(1668).default||__webpack_require__(1668):""]}),Object(tslib_es6.f)("design:paramtypes",["function"==typeof(manage_competencies_component_a=void 0!==competencies_service_CompetenciesService&&competencies_service_CompetenciesService)?manage_competencies_component_a:Object,"function"==typeof(_b=void 0!==translate_pipe.a&&translate_pipe.a)?_b:Object,"function"==typeof(_c=void 0!==ng_zorro_antd_message.e&&ng_zorro_antd_message.e)?_c:Object])],manage_competencies_component_ManageCompetenciesComponent);const manageBytesInhouseRoutes=[{path:"",component:manage_competencies_component_ManageCompetenciesComponent,canActivate:[__webpack_require__(135).a],data:{keys:[privilege_enum.a.SETTING,privilege_enum.a.MANAGE_LEARNING,privilege_enum.a.COMPETENCIES,privilege_enum.a.ALL_PAGES]}}];let ManageCompetenciesRoutingModule=class ManageCompetenciesRoutingModule{};ManageCompetenciesRoutingModule=Object(tslib_es6.c)([Object(core.NgModule)({imports:[router.l.forChild(manageBytesInhouseRoutes)],exports:[router.l]})],ManageCompetenciesRoutingModule);var create_new_competency_component_a,create_new_competency_component_b,create_new_competency_component_c,_d,_e,_f,Subject=__webpack_require__(16),skills_service=__webpack_require__(1421),takeUntil=__webpack_require__(29),unsubscribe=__webpack_require__(216),account_manager=__webpack_require__(218);class CompetencyUtils{static updateTree(newNode,oldTree,nodeId,parentId){const newTree=[];for(const node of oldTree){let updatedNode=Object.assign(Object.assign({},node),{isSelected:!1,isExpanded:!1});if(nodeId&&node.id===nodeId?updatedNode=Object.assign(Object.assign(Object.assign({},node),newNode),{isSelected:!0,isExpanded:!0}):parentId&&node.id===parentId&&(node.children||(updatedNode.children=[]),updatedNode.children.push(Object.assign(Object.assign({},newNode),{isSelected:!0})),updatedNode.isExpanded=!0,console.log(nodeId,parentId,newNode,updatedNode)),node.children){const updatedTree=this.updateTree(newNode,node.children,nodeId,parentId);updatedNode.children=updatedTree,updatedNode.isExpanded=updatedNode.isExpanded||updatedTree.map(v=>v.isExpanded).includes(!0)}newTree.push(updatedNode)}return newTree}static mapToSkills(subMenu,parentSkill){return subMenu?subMenu.map(value=>{const parent={id:value.backendId,title:value.name,description:value.description},skill=Object.assign(Object.assign({},parent),{subSkills:this.mapToSkills(value.children,parent),linkedCompetencies:value.linkedCompetencies?[...value.linkedCompetencies]:[],linkedSkills:value.linkedSkills&&value.linkedSkills.length?[...value.linkedSkills].map(s=>({id:s.key,title:s.title})):[]});return parentSkill&&(skill.parentSkill=Object.assign({},parentSkill)),value.backendId||delete skill.id,skill}):[]}static removeSkill(id,subMenu){const newSkills=[];for(const item of subMenu){let updatedItem={};item.id!==id&&(updatedItem=item.children?Object.assign(Object.assign({},item),{children:this.removeSkill(id,item.children)}):Object.assign({},item),newSkills.push(updatedItem))}return newSkills}static getSelectedNode(array,key,id){for(const item of array){if(item.id===id)return item;if(item[key]){const node=this.getSelectedNode(item[key],key,id);if(node)return node}else;}}}class SkillUtils{static getLinkedSkills(skills,ids){let linkedSkills=[];return ids&&ids.length&&skills.forEach(skill=>{if(ids.includes(skill.key)){if(linkedSkills=[...linkedSkills,skill],skill.children&&skill.children.length){const childLinkedSkills=this.getLinkedSkills(skill.children,ids);linkedSkills=[...linkedSkills,...childLinkedSkills]}}else if(skill.children&&skill.children.length){const childLinkedSkills=this.getLinkedSkills(skill.children,ids);linkedSkills=[...linkedSkills,...childLinkedSkills]}}),linkedSkills}static transformSkillOptions(skills){return skills.map(e=>{const updatedSkill={title:e.title,key:e.id};let subSkills=null;return e.subSkills?(subSkills=this.transformSkillOptions(e.subSkills),updatedSkill.children=subSkills):updatedSkill.isLeaf=!0,updatedSkill})}}let create_new_competency_component_CreateNewCompetencyComponent=class CreateNewCompetencyComponent extends unsubscribe.a{constructor(competencyService,skillsService,accManager,messageService,translatePipe){super(),this.competencyService=competencyService,this.skillsService=skillsService,this.accManager=accManager,this.messageService=messageService,this.translatePipe=translatePipe,this.updating=!1,this.visible=new Subject.a,this.competencyCreatedOrModified=new Subject.a,this.selectedSkill={},this.localId=0,this.subMenuWithCompetency=[],this.competencySkills=[],this.formIsDirty=new core.EventEmitter,this.controls={competencyName:new fesm5_forms.FormControl(null,[fesm5_forms.Validators.required,fesm5_forms.Validators.maxLength(128)]),version:new fesm5_forms.FormControl(null,[fesm5_forms.Validators.required,fesm5_forms.Validators.maxLength(20)])},this.skillControls={name:new fesm5_forms.FormControl(null,[fesm5_forms.Validators.required,fesm5_forms.Validators.maxLength(1024)]),description:new fesm5_forms.FormControl(null,[fesm5_forms.Validators.maxLength(1e5)]),linkedSkills:new fesm5_forms.FormControl([])},this.form=new fesm5_forms.FormGroup(this.controls),this.skillForm=new fesm5_forms.FormGroup(this.skillControls),this.creatorName=null,this.isTempNode=!1,this.ManagerUtils=utils.a,this.pendingAction=null,this.skillOptions=[],this.skillErrorVisible=!1,this.disableCreate=!1}get selectedCompetency(){return this._selectedCompetency}set selectedCompetency(value){this._selectedCompetency=value,this.form.patchValue(value),this.updating=!!Object.keys(value).length,value.id&&this.skillsService.getSkillsListForCompetency(value.id).pipe(Object(takeUntil.a)(this._destroyed$)).subscribe(res=>{this.competencySkills=res,this.subMenuWithCompetency=[{id:-1,backendId:res[0].id,canAddChild:!0,deletable:!1,children:this.mapSkillsToSubMenuEditable(res[0].subSkills),description:res[0].description,linkedSkills:res[0].linkedSkills?res[0].linkedSkills.map(v=>({key:v.id,title:v.title})):[],name:value.competencyName,isExpanded:!0,isSelected:!1}]},error=>{console.log(error.message)})}ngOnInit(){this.accManager.getAccount().subscribe(val=>{(val.firstName||val.lastName)&&(this.creatorName=val.firstName+" "+val.lastName)}),this.skillsService.getSkillsList().subscribe(res=>{this.skillOptions=SkillUtils.transformSkillOptions(res)}),this.form.valueChanges.pipe(Object(takeUntil.a)(this._destroyed$)).subscribe(v=>{this.form.dirty&&this.formIsDirty.emit(!0)}),this.skillForm.valueChanges.pipe(Object(takeUntil.a)(this._destroyed$)).subscribe(v=>{this.skillForm.dirty&&(this.formIsDirty.emit(!0),this.unsavedData=!0)}),this.skillControls.name.valueChanges.pipe(Object(takeUntil.a)(this._destroyed$)).subscribe(val=>this.titleUpdated(val)),this.controls.competencyName.valueChanges.pipe(Object(takeUntil.a)(this._destroyed$)).subscribe(v=>{this.subMenuWithCompetency.length?(console.log("Competency name changed",v),this.subMenuWithCompetency[0].name=v):this.subMenuWithCompetency[0]={id:-1,deletable:!1,canAddChild:!0,children:[],description:"",linkedSkills:[],name:v,isExpanded:!0,isSelected:!1}})}cancel(){this.visible.next(!1),this.selectedCompetency={},this.selectedSkill=null,this.selectedNodeToAppendChild=null}addClicked(event){this.unsavedData?(this.pendingAction={action:"add",data:event},this.saveSkillForm(this.skillsForm.nativeElement)):this.addSkill(event)}addSkill(event){console.log("ADDING SKILL",event),this.pendingAction=null,this.selectedSkill={},this.selectedNodeToAppendChild=CompetencyUtils.getSelectedNode(this.subMenuWithCompetency,"children",event.id);this.addOrUpdateSkills({name:"New Node",description:"",update:!1,linkedCompetencies:[],linkedSkills:[]}),this.isTempNode=!0;const selectedParent=CompetencyUtils.getSelectedNode(this.subMenuWithCompetency,"children",event.id);this.selectedSkill=selectedParent.children.slice(-1)[0],this.skillForm.patchValue(Object.assign(Object.assign({},this.selectedSkill),{linkedSkills:[]})),selectedParent.isExpanded=!0}selectClicked(event){this.unsavedData?(this.pendingAction={action:"select",data:event},this.saveSkillForm(this.skillsForm.nativeElement)):this.selectSkill(event)}selectSkill(event){this.pendingAction=null,this.selectedSkill=event;let linkedSkills=[];event.linkedSkills&&(linkedSkills=event.linkedSkills.map(s=>s.key)),this.skillForm.patchValue(Object.assign(Object.assign({},event),{linkedSkills:linkedSkills}),{emitEvent:!1});const nodeId=event.id,newTree=CompetencyUtils.updateTree(event,this.subMenuWithCompetency,nodeId,null);this.subMenuWithCompetency=[...newTree],this.competencySkills=CompetencyUtils.mapToSkills(newTree),this.selectedNodeToAppendChild=null}deleteClicked(event){this.unsavedData?(this.pendingAction={action:"delete",data:event},this.saveSkillForm(this.skillsForm.nativeElement)):this.deleteSkill(event)}deleteSkill(event){this.selectedSkill={},this.pendingAction=null,event.backendId?this.skillsService.deleteSkill(event.backendId).subscribe(()=>{this.subMenuWithCompetency=CompetencyUtils.removeSkill(event.id,this.subMenuWithCompetency),this.competencySkills=CompetencyUtils.mapToSkills(this.subMenuWithCompetency)}):(this.subMenuWithCompetency=CompetencyUtils.removeSkill(event.id,this.subMenuWithCompetency),this.competencySkills=CompetencyUtils.mapToSkills(this.subMenuWithCompetency))}createCompetencyClicked(formElement){this.unsavedData?(this.pendingAction={action:"create-comp",data:formElement},this.saveSkillForm(this.skillsForm.nativeElement)):this.createCompetency(formElement)}createCompetency(formElement){if(this.form.invalid)utils.a.checkFormValidity(this.form,formElement);else{this.disableCreate=!0;const data=Object.assign(Object.assign({},this.form.value),{type:"Private",creator:this.creatorName,description:this.subMenuWithCompetency[0].description,linkedSkills:this.subMenuWithCompetency[0].linkedSkills});this.competencySkills=CompetencyUtils.mapToSkills(this.subMenuWithCompetency),this.competencyService.createCompetency(data).subscribe(value=>{this.skillsService.createSkill(value.id,this.competencySkills).subscribe(_=>{this.disableCreate=!1,this.messageService.success(this.translatePipe.transform("COMPETENCIES_ADDED_SUCCESSFULLY")),this.competencyCreatedOrModified.next(value),this.formIsDirty.emit(!1),this.cancel()},error=>{this.disableCreate=!1})},error=>{this.disableCreate=!1})}}updateCompetencyClicked(formElement){this.unsavedData?(this.pendingAction={action:"update-comp",data:formElement},this.saveSkillForm(this.skillsForm.nativeElement)):this.updateCompetency(formElement)}updateCompetency(formElement){if(this.form.invalid)utils.a.checkFormValidity(this.form,formElement);else{this.disableCreate=!0;const creator=this.selectedCompetency.creator?this.selectedCompetency.creator:this.creatorName,data=Object.assign(Object.assign(Object.assign({},this.selectedCompetency),this.form.value),{description:this.subMenuWithCompetency[0].description,linkedSkills:this.subMenuWithCompetency[0].linkedSkills,creator:creator});this.competencySkills=CompetencyUtils.mapToSkills(this.subMenuWithCompetency),this.skillsService.updateSkills(this.selectedCompetency.id,this.competencySkills).subscribe(res=>{this.competencyService.updateCompetency(data).pipe(Object(takeUntil.a)(this._destroyed$)).subscribe(value=>{this.disableCreate=!1,this.messageService.success(this.translatePipe.transform("COMPETENCIES_UPDATED_SUCCESSFULLY")),this.competencyCreatedOrModified.next(value),this.formIsDirty.emit(!1),this.cancel()},error=>{this.disableCreate=!1})},error=>{this.disableCreate=!1})}}saveSkillForm(formElement){if(this.skillForm.invalid)utils.a.checkFormValidity(this.skillForm,formElement);else{const linkedSkills=SkillUtils.getLinkedSkills(this.skillOptions,this.skillControls.linkedSkills.value);this.addOrUpdateSkills(Object.assign(Object.assign(Object.assign({},this.selectedSkill),this.skillForm.value),{linkedSkills:linkedSkills,update:!0})),this.skillControls.linkedSkills.reset()}}addOrUpdateSkills(event){const skill=Object.assign(Object.assign({},event),{canAddChild:!0,deletable:!0});if(delete skill.update,skill.hasOwnProperty("id")||(skill.id=this.getLocalIdForSkills()),event.update&&!Object.keys(this.selectedSkill||{}).length)return;const nodeId=event.update?this.selectedSkill.id:null,parentId=this.selectedNodeToAppendChild?this.selectedNodeToAppendChild.id:null;if(nodeId||parentId){const newTree=CompetencyUtils.updateTree(skill,this.subMenuWithCompetency,nodeId,parentId);this.subMenuWithCompetency=[...newTree],this.competencySkills=CompetencyUtils.mapToSkills(newTree),this.selectedNodeToAppendChild=null,this.selectedSkill={}}if(this.unsavedData=!1,this.pendingAction)switch(this.pendingAction.action){case"add":this.addSkill(this.pendingAction.data);break;case"delete":this.deleteSkill(this.pendingAction.data);break;case"select":this.selectSkill(this.pendingAction.data);break;case"update-comp":this.updateCompetency(this.pendingAction.data);break;case"create-comp":this.createCompetency(this.pendingAction.data);break;default:return}}mapSkillsToSubMenuEditable(skills){return skills?skills.map(value=>({backendId:value.id,id:this.getLocalIdForSkills(),name:value.title,description:value.description,children:value.subSkills?this.mapSkillsToSubMenuEditable(value.subSkills):[],linkedCompetencies:value.linkedCompetencies,linkedSkills:value.linkedSkills?value.linkedSkills.map(v=>({key:v.id,title:v.title})):[],deletable:!0,canAddChild:!0})):[]}getLocalIdForSkills(){return this.localId++,this.localId}titleUpdated(value){if(!Object.keys(this.selectedSkill||{}).length)return;const selectedSkill=Object.assign(Object.assign({},this.selectedSkill),{update:!0});selectedSkill.name=value,this.addOrUpdateSkills(selectedSkill),this.selectedSkill=Object.assign({},selectedSkill)}};var add_competency_component_a,add_competency_component_b,add_competency_component_c;Object(tslib_es6.c)([Object(core.Output)(),Object(tslib_es6.f)("design:type",Object)],create_new_competency_component_CreateNewCompetencyComponent.prototype,"visible",void 0),Object(tslib_es6.c)([Object(core.Output)(),Object(tslib_es6.f)("design:type",Object)],create_new_competency_component_CreateNewCompetencyComponent.prototype,"competencyCreatedOrModified",void 0),Object(tslib_es6.c)([Object(core.Output)(),Object(tslib_es6.f)("design:type",Object)],create_new_competency_component_CreateNewCompetencyComponent.prototype,"formIsDirty",void 0),Object(tslib_es6.c)([Object(core.ViewChild)("skillsForm"),Object(tslib_es6.f)("design:type","function"==typeof(create_new_competency_component_a=void 0!==core.ElementRef&&core.ElementRef)?create_new_competency_component_a:Object)],create_new_competency_component_CreateNewCompetencyComponent.prototype,"skillsForm",void 0),Object(tslib_es6.c)([Object(core.Input)(),Object(tslib_es6.f)("design:type",Object),Object(tslib_es6.f)("design:paramtypes",[Object])],create_new_competency_component_CreateNewCompetencyComponent.prototype,"selectedCompetency",null),create_new_competency_component_CreateNewCompetencyComponent=Object(tslib_es6.c)([Object(core.Component)({selector:"nxq-create-new-competency",template:(__webpack_require__(1669).default||__webpack_require__(1669)).length?__webpack_require__(1669).default||__webpack_require__(1669):"",styles:[(__webpack_require__(1670).default||__webpack_require__(1670)).length?__webpack_require__(1670).default||__webpack_require__(1670):""]}),Object(tslib_es6.f)("design:paramtypes",["function"==typeof(create_new_competency_component_b=void 0!==competencies_service_CompetenciesService&&competencies_service_CompetenciesService)?create_new_competency_component_b:Object,"function"==typeof(create_new_competency_component_c=void 0!==skills_service.a&&skills_service.a)?create_new_competency_component_c:Object,"function"==typeof(_d=void 0!==account_manager.a&&account_manager.a)?_d:Object,"function"==typeof(_e=void 0!==ng_zorro_antd_message.e&&ng_zorro_antd_message.e)?_e:Object,"function"==typeof(_f=void 0!==translate_pipe.a&&translate_pipe.a)?_f:Object])],create_new_competency_component_CreateNewCompetencyComponent);let add_competency_component_AddCompetencyComponent=class AddCompetencyComponent{constructor(competencyService,messageService,translatePipe){this.competencyService=competencyService,this.messageService=messageService,this.translatePipe=translatePipe,this.visible=new Subject.a,this.headers=[{title:this.translatePipe.transform("NAME").toUpperCase(),type:public_api.s.TEXT,property:"competencyName"},{title:this.translatePipe.transform("VERSION").toUpperCase(),type:public_api.s.TEXT,property:"version"},{title:this.translatePipe.transform("CREATOR").toUpperCase(),type:public_api.s.TEXT,property:"creator"},{title:this.translatePipe.transform("ACTIONS").toUpperCase(),type:public_api.s.ACTIONS,property:"",actions:[{title:this.translatePipe.transform("PREVIEW"),type:public_api.r.BUTTON,value:"preview"},{title:this.translatePipe.transform("ADD"),type:public_api.r.BUTTON,value:"add"},{title:this.translatePipe.transform("DUPLICATE"),type:public_api.r.BUTTON,value:"duplicate"}]}],this.data=[],this.filteredData=[]}ngOnInit(){this.getCompetenciesList()}cancel(){this.visible.next(!1)}filterMasterCompetency(competency){return competency.filter(value=>"Master"===value.type)}onAdd(){this.selectedIds&&(this.selectedIds.forEach(id=>{this.competencyService.addFromMasterCompetency(id).subscribe(value=>{})}),this.messageService.success(this.translatePipe.transform("COMPETENCIES_CREATED_SUCCESSFULLY")))}actionClicked(event){console.log(event),"add"===event.value&&this.competencyService.addFromMasterCompetency(event.data.id).subscribe(value=>{this.messageService.success(this.translatePipe.transform("COMPETENCIES_CREATED_SUCCESSFULLY"))}),"duplicate"===event.value&&this.competencyService.duplicateCompetency(event.data.id).subscribe(value=>{this.messageService.success(this.translatePipe.transform("COMPETENCIES_CREATED_SUCCESSFULLY"))}),"preview"===event.value&&(this.showPreview=!0,this.previewData=event.data,console.log(this.showPreview,"preview"))}filters(event){event.search?this.filteredData=[...this.data.filter(item=>item.competencyName.toLowerCase().includes(event.search.toLowerCase())||item.creator&&item.creator.toLowerCase().includes(event.search.toLowerCase())||item.version.toLowerCase().includes(event.search.toLowerCase()))]:this.filteredData=[...this.data]}onCancelPreview(){this.showPreview=!1}rowSelected(selectedIds){this.selectedIds=[...selectedIds],console.log(this.selectedIds)}getCompetenciesList(){this.competencyService.getCompetenciesList().subscribe(value=>{this.data=this.filterMasterCompetency(value),this.filteredData=this.data})}};var create_new_master_competency_component_a,create_new_master_competency_component_b,create_new_master_competency_component_c,create_new_master_competency_component_d,create_new_master_competency_component_e;Object(tslib_es6.c)([Object(core.Output)(),Object(tslib_es6.f)("design:type",Object)],add_competency_component_AddCompetencyComponent.prototype,"visible",void 0),add_competency_component_AddCompetencyComponent=Object(tslib_es6.c)([Object(core.Component)({selector:"nxq-add-competency",template:(__webpack_require__(1671).default||__webpack_require__(1671)).length?__webpack_require__(1671).default||__webpack_require__(1671):"",styles:[(__webpack_require__(1672).default||__webpack_require__(1672)).length?__webpack_require__(1672).default||__webpack_require__(1672):""]}),Object(tslib_es6.f)("design:paramtypes",["function"==typeof(add_competency_component_a=void 0!==competencies_service_CompetenciesService&&competencies_service_CompetenciesService)?add_competency_component_a:Object,"function"==typeof(add_competency_component_b=void 0!==ng_zorro_antd_message.e&&ng_zorro_antd_message.e)?add_competency_component_b:Object,"function"==typeof(add_competency_component_c=void 0!==translate_pipe.a&&translate_pipe.a)?add_competency_component_c:Object])],add_competency_component_AddCompetencyComponent);let create_new_master_competency_component_CreateNewMasterCompetencyComponent=class CreateNewMasterCompetencyComponent extends unsubscribe.a{constructor(competencyService,skillsService,messageService,translatePipe){super(),this.competencyService=competencyService,this.skillsService=skillsService,this.messageService=messageService,this.translatePipe=translatePipe,this.updating=!1,this.visible=new Subject.a,this.subMenuWithCompetency=[],this.competencySkills=[],this.formIsDirty=new core.EventEmitter,this.selectedSkill={},this.localId=0,this.oldTitle=null,this.controls={competencyName:new fesm5_forms.FormControl(null,[fesm5_forms.Validators.required,fesm5_forms.Validators.maxLength(128)]),creator:new fesm5_forms.FormControl(null,[fesm5_forms.Validators.maxLength(64)]),version:new fesm5_forms.FormControl(null,[fesm5_forms.Validators.maxLength(20)])},this.skillControls={name:new fesm5_forms.FormControl(null,[fesm5_forms.Validators.required,fesm5_forms.Validators.maxLength(1024)]),description:new fesm5_forms.FormControl(null,[fesm5_forms.Validators.maxLength(1e5)]),linkedSkills:new fesm5_forms.FormControl([])},this.form=new fesm5_forms.FormGroup(this.controls),this.skillForm=new fesm5_forms.FormGroup(this.skillControls),this.skillErrorVisible=!1,this.isTempNode=!1,this.ManagerUtils=utils.a,this.pendingAction=null,this.skillOptions=[]}ngOnInit(){this.previewData&&this.disableAndSetControls(),this.form.valueChanges.pipe(Object(takeUntil.a)(this._destroyed$)).subscribe(v=>{this.form.dirty&&this.formIsDirty.emit(!0)}),this.skillForm.valueChanges.pipe(Object(takeUntil.a)(this._destroyed$)).subscribe(v=>{this.skillForm.dirty&&(this.formIsDirty.emit(!0),this.unsavedData=!0)}),this.skillControls.name.valueChanges.pipe(Object(takeUntil.a)(this._destroyed$)).subscribe(val=>this.titleUpdated(val)),this.controls.competencyName.valueChanges.pipe(Object(takeUntil.a)(this._destroyed$)).subscribe(v=>{this.subMenuWithCompetency.length?this.subMenuWithCompetency[0].name=v:this.subMenuWithCompetency[0]={id:-1,deletable:!1,canAddChild:!0,children:[],description:"",linkedSkills:[],name:v,isExpanded:!0,isSelected:!1}})}cancel(){this.visible.next(!1),this.selectedSkill={},this.selectedNodeToAppendChild=null}addClicked(event){console.log("ADD CLICKED",event,this.unsavedData),this.unsavedData?(this.pendingAction={action:"add",data:event},this.saveSkillForm(this.skillsForm.nativeElement)):this.addSkill(event)}addSkill(event){this.pendingAction=null,this.selectedSkill={},this.selectedNodeToAppendChild=CompetencyUtils.getSelectedNode(this.subMenuWithCompetency,"children",event.id);this.addOrUpdateSkills({name:"New Node",description:"",update:!1,linkedCompetencies:[],linkedSkills:[]}),this.isTempNode=!0;const selectedParent=CompetencyUtils.getSelectedNode(this.subMenuWithCompetency,"children",event.id);console.log("PARENT",this.subMenuWithCompetency,event.id,selectedParent),this.selectedSkill=selectedParent.children.slice(-1)[0],selectedParent.isExpanded=!0,this.skillForm.patchValue(Object.assign(Object.assign({},this.selectedSkill),{linkedSkills:[]}))}selectClicked(event){console.log("SELECT CLICKED",event,this.unsavedData),this.unsavedData?(this.pendingAction={action:"select",data:event},this.saveSkillForm(this.skillsForm.nativeElement)):this.selectSkill(event)}selectSkill(event){this.pendingAction=null,this.selectedSkill=event;let linkedSkills=[];event.linkedSkills&&(linkedSkills=event.linkedSkills.map(s=>s.key)),this.skillForm.patchValue(Object.assign(Object.assign({},event),{linkedSkills:linkedSkills}),{emitEvent:!1});const nodeId=event.id,newTree=CompetencyUtils.updateTree(event,this.subMenuWithCompetency,nodeId,null);this.subMenuWithCompetency=[...newTree],this.competencySkills=CompetencyUtils.mapToSkills(newTree),this.selectedNodeToAppendChild=null}deleteClicked(event){this.unsavedData?(this.saveSkillForm(this.skillsForm.nativeElement),this.pendingAction={action:"delete",data:event}):this.deleteSkill(event)}deleteSkill(event){this.selectedSkill={},this.pendingAction=null,event.backendId?this.skillsService.deleteSkill(event.backendId).subscribe(()=>{this.subMenuWithCompetency=CompetencyUtils.removeSkill(event.id,this.subMenuWithCompetency),this.competencySkills=CompetencyUtils.mapToSkills(this.subMenuWithCompetency),console.log("Deleted Skill")}):(this.subMenuWithCompetency=CompetencyUtils.removeSkill(event.id,this.subMenuWithCompetency),this.competencySkills=CompetencyUtils.mapToSkills(this.subMenuWithCompetency)),this.isTempNode=!1}createCompetencyClicked(formElement){this.unsavedData?(this.pendingAction={action:"create-comp",data:formElement},this.saveSkillForm(this.skillsForm.nativeElement)):this.createCompetency(formElement)}createCompetency(formElement){if(this.form.invalid)utils.a.checkFormValidity(this.form,formElement);else{const data=Object.assign(Object.assign({},this.form.value),{type:"Master",description:this.subMenuWithCompetency[0].description,linkedSkills:this.subMenuWithCompetency[0].linkedSkills});this.competencySkills=CompetencyUtils.mapToSkills(this.subMenuWithCompetency),this.competencyService.createCompetency(data).pipe(Object(takeUntil.a)(this._destroyed$)).subscribe(value=>{this.skillsService.createSkill(value.id,this.competencySkills).subscribe(res=>{this.messageService.success(this.translatePipe.transform("COMPETENCIES_ADDED_SUCCESSFULLY")),this.formIsDirty.emit(!1),this.cancel()})})}}saveSkillForm(formElement){if(this.skillForm.invalid)utils.a.checkFormValidity(this.skillForm,formElement);else{const linkedSkills=SkillUtils.getLinkedSkills(this.skillOptions,this.skillControls.linkedSkills.value);this.addOrUpdateSkills(Object.assign(Object.assign(Object.assign({},this.selectedSkill),this.skillForm.value),{linkedSkills:linkedSkills,update:!0})),this.skillControls.linkedSkills.reset()}}addOrUpdateSkills(event){const skill=Object.assign(Object.assign({},event),{canAddChild:!0,deletable:!0});if(delete skill.update,skill.hasOwnProperty("id")||(skill.id=this.getLocalIdForSkills()),event.update&&!Object.keys(this.selectedSkill||{}).length)return;const nodeId=event.update?this.selectedSkill.id:null,parentId=this.selectedNodeToAppendChild?this.selectedNodeToAppendChild.id:null;if(nodeId||parentId){const newTree=CompetencyUtils.updateTree(skill,this.subMenuWithCompetency,nodeId,parentId);this.subMenuWithCompetency=[...newTree],this.competencySkills=CompetencyUtils.mapToSkills(newTree),this.selectedNodeToAppendChild=null,this.selectedSkill={}}if(this.unsavedData=!1,this.pendingAction)switch(this.pendingAction.action){case"add":this.addSkill(this.pendingAction.data);break;case"delete":this.deleteSkill(this.pendingAction.data);break;case"select":this.selectSkill(this.pendingAction.data);break;case"create-comp":this.createCompetency(this.pendingAction.data);break;default:return}}mapSkillsToSubMenuEditable(skills){return skills.map(value=>({backendId:value.id,id:this.getLocalIdForSkills(),name:value.title,description:value.description,children:value.subSkills?this.mapSkillsToSubMenuEditable(value.subSkills):[],linkedCompetencies:value.linkedCompetencies,linkedSkills:value.linkedSkills?value.linkedSkills.map(v=>({key:v.id,title:v.title})):[],deletable:!this.previewData,canAddChild:!this.previewData}))}getLocalIdForSkills(){return this.localId++,this.localId}titleUpdated(value){if(!Object.keys(this.selectedSkill||{}).length)return;this.oldTitle||(this.oldTitle=this.selectedSkill.name);const selectedSkill=Object.assign(Object.assign({},this.selectedSkill),{update:!0});selectedSkill.name=value,this.addOrUpdateSkills(selectedSkill),this.selectedSkill=Object.assign({},selectedSkill)}disableAndSetControls(){this.previewData.id&&this.skillsService.getSkillsListForCompetency(this.previewData.id).pipe(Object(takeUntil.a)(this._destroyed$)).subscribe(res=>{console.log("SUBSKILLS",res[0].subSkills),this.competencySkills=res,this.subMenuWithCompetency=[{id:-1,backendId:res[0].id,canAddChild:!0,deletable:!1,children:this.mapSkillsToSubMenuEditable(res[0].subSkills),description:res[0].description,linkedSkills:res[0].linkedSkills?res[0].linkedSkills.map(v=>({key:v.id,title:v.title})):[],name:this.previewData.competencyName,isExpanded:!0,isSelected:!1}],this.form.patchValue(this.previewData);["competencyName","creator","version"].forEach(v=>this.controls[v].disable());["name","description","linkedSkills"].forEach(v=>this.skillControls[v].disable())},error=>{console.log(error.message)})}};Object(tslib_es6.c)([Object(core.Output)(),Object(tslib_es6.f)("design:type",Object)],create_new_master_competency_component_CreateNewMasterCompetencyComponent.prototype,"visible",void 0),Object(tslib_es6.c)([Object(core.Input)(),Object(tslib_es6.f)("design:type",Object)],create_new_master_competency_component_CreateNewMasterCompetencyComponent.prototype,"previewData",void 0),Object(tslib_es6.c)([Object(core.Output)(),Object(tslib_es6.f)("design:type",Object)],create_new_master_competency_component_CreateNewMasterCompetencyComponent.prototype,"formIsDirty",void 0),Object(tslib_es6.c)([Object(core.ViewChild)("skillsForm"),Object(tslib_es6.f)("design:type","function"==typeof(create_new_master_competency_component_a=void 0!==core.ElementRef&&core.ElementRef)?create_new_master_competency_component_a:Object)],create_new_master_competency_component_CreateNewMasterCompetencyComponent.prototype,"skillsForm",void 0),create_new_master_competency_component_CreateNewMasterCompetencyComponent=Object(tslib_es6.c)([Object(core.Component)({selector:"nxq-create-new-master-competency",template:(__webpack_require__(1673).default||__webpack_require__(1673)).length?__webpack_require__(1673).default||__webpack_require__(1673):"",styles:[(__webpack_require__(1674).default||__webpack_require__(1674)).length?__webpack_require__(1674).default||__webpack_require__(1674):""]}),Object(tslib_es6.f)("design:paramtypes",["function"==typeof(create_new_master_competency_component_b=void 0!==competencies_service_CompetenciesService&&competencies_service_CompetenciesService)?create_new_master_competency_component_b:Object,"function"==typeof(create_new_master_competency_component_c=void 0!==skills_service.a&&skills_service.a)?create_new_master_competency_component_c:Object,"function"==typeof(create_new_master_competency_component_d=void 0!==ng_zorro_antd_message.e&&ng_zorro_antd_message.e)?create_new_master_competency_component_d:Object,"function"==typeof(create_new_master_competency_component_e=void 0!==translate_pipe.a&&translate_pipe.a)?create_new_master_competency_component_e:Object])],create_new_master_competency_component_CreateNewMasterCompetencyComponent);const COMPONENTS=[...[manage_competencies_component_ManageCompetenciesComponent],...[create_new_competency_component_CreateNewCompetencyComponent,add_competency_component_AddCompetencyComponent,create_new_master_competency_component_CreateNewMasterCompetencyComponent]];let ManageCompetenciesModule=class ManageCompetenciesModule{};ManageCompetenciesModule=Object(tslib_es6.c)([Object(core.NgModule)({declarations:[...COMPONENTS],imports:[common.b,shared_module.a,ManageCompetenciesRoutingModule],exports:[...COMPONENTS],providers:[]})],ManageCompetenciesModule)}}]);
//# sourceMappingURL=19.8083e24f987c35a716b3.bundle.js.map