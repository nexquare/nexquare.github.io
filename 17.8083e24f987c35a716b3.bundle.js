(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{1414:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return DateUtils}));class DateUtils{static daysBetweenDates(dateA,dateB){const one=new Date(dateA.getFullYear(),dateA.getMonth(),dateA.getDate());return(new Date(dateB.getFullYear(),dateB.getMonth(),dateB.getDate()).getTime()-one.getTime())/864e5}static calculateAge(birthday){if(birthday>new Date(Date.now()))return null;const ageDifMs=Date.now()-birthday.getTime(),ageDate=new Date(ageDifMs);return Math.abs(ageDate.getUTCFullYear()-1970)}static addDays(date,days){return new Date(date.getFullYear(),date.getMonth(),date.getDate()+days)}static daysInMonth(month,year){return new Date(year,month,0).getDate()}static toISODateString(date){const fullDate=("0"+date.getDate()).slice(-2),fullMonth=("0"+(date.getMonth()+1)).slice(-2);return date.getFullYear()+"-"+fullMonth+"-"+fullDate}static stringToUTCDate(stringDate){const tempDate=new Date(stringDate),userTimezoneOffset=6e4*tempDate.getTimezoneOffset();return new Date(tempDate.getTime()+userTimezoneOffset)}static convertToDateString(date){const fullDate=("0"+date.getDate()).slice(-2),fullMonth=("0"+(date.getMonth()+1)).slice(-2);return date.getFullYear()+"-"+fullMonth+"-"+fullDate}static convertToDateTimeString(date){const fullDate=("0"+date.getDate()).slice(-2),fullMonth=("0"+(date.getMonth()+1)).slice(-2);return date.getFullYear()+"-"+fullMonth+"-"+fullDate+" "+date.getHours()+":"+date.getMinutes()+":"+date.getSeconds()}static getDueDateStatus(date){const a=new Date(date).getTime()-(new Date).getTime(),seconds=Math.floor(a/1e3),minutes=Math.floor(seconds/60),hours=Math.floor(minutes/60);return Math.floor(hours/24)}}DateUtils.months=[{id:1,value:"January"},{id:2,value:"February"},{id:3,value:"March"},{id:4,value:"April"},{id:5,value:"June"},{id:6,value:"July"},{id:7,value:"August"},{id:9,value:"September"},{id:10,value:"October"},{id:11,value:"November"},{id:12,value:"December"}]},1422:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return RocketChatService}));var _a,tslib__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(1),_angular_core__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(0),_api_service__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(217);let RocketChatService=class RocketChatService{constructor(apiService){this.apiService=apiService,this.rocket_chat_sub_url="rocketchat/api/v1/channels",this.users_sub_url="rocketchat/api/v1/users",this.role_sub_url="controller/api/tenant/connect/roles"}getChannelList(){return this.apiService.get(""+this.rocket_chat_sub_url)}createChannel(data){return this.apiService.post(this.rocket_chat_sub_url,data)}deleteChannel(data){return this.apiService.delete(this.rocket_chat_sub_url,data)}getUsersList(channelId,included=!0){return this.apiService.get(`${this.rocket_chat_sub_url}/${channelId}/users`,{included:included})}addUsersInChannel(channelId,data){return this.apiService.put(`${this.rocket_chat_sub_url}/${channelId}/users`,data)}removeUserFromChannel(channelId,userId){return this.apiService.delete(`${this.rocket_chat_sub_url}/${channelId}/users/${userId}`)}removeUserInBulkFromChannel(channelId,data){return this.apiService.deleteWithData(`${this.rocket_chat_sub_url}/${channelId}/users`,data)}removeAllUsersFromChannel(channelId){return this.apiService.delete(`${this.rocket_chat_sub_url}/${channelId}/users/all`)}getUserRolesList(){return this.apiService.get(""+this.role_sub_url)}getChannelRolesList(channelId){return this.apiService.get(`${this.rocket_chat_sub_url}/${channelId}/users/roles`)}updateChannelUsersRole(channelId,data){return this.apiService.put(`${this.rocket_chat_sub_url}/${channelId}/users/roles`,data)}assignUsersInRole(channelId,data){return this.apiService.get(`${this.rocket_chat_sub_url}/${channelId}/users/assign-role`,data)}changeUserRole(channelId,userId,roleName){return this.apiService.post(`${this.rocket_chat_sub_url}/roles/${roleName}/users/${userId}`,null)}};RocketChatService=Object(tslib__WEBPACK_IMPORTED_MODULE_0__.c)([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__.Injectable)({providedIn:"root"}),Object(tslib__WEBPACK_IMPORTED_MODULE_0__.f)("design:paramtypes",["function"==typeof(_a=void 0!==_api_service__WEBPACK_IMPORTED_MODULE_2__.a&&_api_service__WEBPACK_IMPORTED_MODULE_2__.a)?_a:Object])],RocketChatService)},1675:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_exports__.default='<nxq-manage-header [headerSettings]="headerSettings">\n  <div class="existing-channels" *ngIf="!isLoading">\n    <nxq-table\n      [tableHeaders]="headers"\n      [tableData]="data"\n      [showPagination]="showPagination"\n      [enableSelect]="enableSelect"\n      [searchPlaceholder]="\'SEARCH_ROLE\' | translate"\n      (actionClicked)="actionClicked($event)"\n      (filtersChanged)="filters($event)"\n      (rowsSelected)="rowsSelected($event)"\n    >\n    </nxq-table>\n\n    <nz-modal\n      [(nzVisible)]="showModal"\n      [nzContent]="modalContent"\n      [nzFooter]="modalFooter"\n      (nzOnCancel)="onCancel()"\n      nzWidth="400px"\n      nzHeight="300px"\n      class="confirm-popup"\n      nzClassName="confirm-modal"\n    >\n      <ng-template #modalContent>\n        {{ \'DELETE_MESSAGE\' | translate }}\n      </ng-template>\n\n      <ng-template #modalFooter>\n        <nxq-button type="primary" (click)="onCancel()">{{ \'CANCEL\' | translate }}</nxq-button>\n        <nxq-button type="secondary" (click)="onConfirm()">{{ \'CONFIRM\' | translate }}</nxq-button>\n      </ng-template>\n    </nz-modal>\n\n    <nxq-button *ngIf="editAllowed" [type]="buttonType.PRIMARY" (click)="onAddChannel()">{{ \'ADD_CHANNEL\' | translate }}</nxq-button>\n\n    <nz-drawer\n      [nzBodyStyle]="{ height: \'calc(100% - 55px)\', overflow: \'auto\', \'padding-bottom\': \'70px\' }"\n      [nzClosable]="false"\n      [nzMaskClosable]="true"\n      [nzWidth]="addChannel ? 450 : 900"\n      [nzVisible]="addChannel || addRemoveMembers"\n      [nzTitle]="\'\'"\n      (nzOnClose)="onClose()"\n    >\n      <div class="side-drawer" *ngIf="addChannel || addRemoveMembers">\n        <nxq-add-channel\n          *ngIf="!!editAllowed && addChannel"\n          (closeDrawer)="onClose($event)"\n          (formIsDirty)="formDirtyStateChanged($event)"\n        ></nxq-add-channel>\n        <nxq-update-channel-members\n          *ngIf="!!editAllowed && addRemoveMembers"\n          [channel]="selectedChannel"\n          (closeDrawer)="onClose()"\n        ></nxq-update-channel-members>\n      </div>\n    </nz-drawer>\n  </div>\n\n  <div class="nxq-spinner-cp" *ngIf="isLoading">\n    <nxq-loading></nxq-loading>\n  </div>\n\n  <nz-modal\n    [(nzVisible)]="showFormDirtyModal"\n    [nzContent]="modalContents"\n    [nzFooter]="modalFooters"\n    (nzOnCancel)="onCancelPopup()"\n    nzWidth="400px"\n    nzHeight="300px"\n    class="confirm-popup"\n    nzClassName="confirm-modal"\n  >\n    <ng-template #modalContents>\n      You have unsaved data in the form, Are you sure you want to discard the changes?\n    </ng-template>\n\n    <ng-template #modalFooters>\n      <nxq-button type="primary" (click)="onCancelPopup()">Cancel</nxq-button>\n      <nxq-button type="secondary" (click)="onConfirmPopup()">Confirm</nxq-button>\n    </ng-template>\n  </nz-modal>\n</nxq-manage-header>\n'},1676:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_exports__.default="/* These mixins are replacement of Flex Layout*/\n.existing-channels {\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  padding: 10px;\n}\n.existing-channels > * {\n  margin-bottom: 20px;\n}\n.existing-channels > *:last-child {\n  margin-bottom: 0;\n}\n.existing-channels__header {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: flex-start;\n  align-content: flex-start;\n}\n.existing-channels__header > * {\n  margin-bottom: 12px;\n}\n.existing-channels__header > *:last-child {\n  margin-bottom: 0;\n}\n.existing-channels__header nxq-header {\n  width: 100%;\n}\n.existing-channels nxq-table {\n  max-height: calc(100vh - 200px);\n  overflow-y: scroll;\n}\n.nxq-spinner-cp {\n  position: absolute;\n  top: 10%;\n  left: 10%;\n}"},1677:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_exports__.default='<div class="update-channel-members">\n  <div class="header">\n    <span>{{ \'ADD_REMOVE_MEM\' | translate }}</span>\n\n    <nxq-tabset-radio-button-group [control]="selectedTab">\n      <nxq-radio-button value="option-1">{{ \'ADD_MEM\' | translate }}</nxq-radio-button>\n      <nxq-radio-button value="option-2">{{ \'EDIT_MEM\' | translate }}</nxq-radio-button>\n    </nxq-tabset-radio-button-group>\n  </div>\n\n  <ng-container *ngIf="selectedTab.value === \'option-1\'">\n    <nxq-add-channel-members [channel]="channel" (closeDrawer)="onClose()"></nxq-add-channel-members>\n  </ng-container>\n\n  <ng-container *ngIf="selectedTab.value === \'option-2\'">\n    <nxq-view-channel-members [channel]="channel" (closeDrawer)="onClose()"></nxq-view-channel-members>\n  </ng-container>\n</div>\n'},1678:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_exports__.default="/* These mixins are replacement of Flex Layout*/\n.update-channel-members {\n  display: flex;\n  flex-direction: column;\n}\n.update-channel-members > * {\n  margin-bottom: 20px;\n}\n.update-channel-members > *:last-child {\n  margin-bottom: 0;\n}\n.update-channel-members .header {\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  align-content: center;\n  font-weight: bold;\n  font-size: 22px;\n  line-height: 22px;\n}\n.update-channel-members .header span {\n  color: #2373ff;\n}"},1679:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_exports__.default='<div class="add-channel">\n  <div class="header">\n    <span>{{ \'ADD_NEW_CHANNEL\' | translate }}</span>\n  </div>\n\n  <nz-divider></nz-divider>\n\n  <form [formGroup]="addChannelForm" class="add-channel_form" #formElement>\n    <div class="add-channel_form__field">\n      <nxq-label [labelType]="labelType.CODE" [value]="\'NAME\' | translate"></nxq-label>\n      <nxq-input-master [control]="controls.name" [placeholder]="\'NAME\' | translate"></nxq-input-master>\n    </div>\n\n    <div class="add-channel_form__field">\n      <nxq-label [labelType]="labelType.CODE" [value]="\'TYPE\' | translate"></nxq-label>\n      <nxq-select\n        [control]="controls.type"\n        [options]="channelTypeOptions"\n        [placeholder]="\'TYPE\' | translate"\n        [mode]="selectMode.DEFAULT"\n      ></nxq-select>\n      <nxq-control-error\n        *ngIf="controls.type.invalid && controls.type.touched"\n        [errorMessage]="\'THIS_FIELD_REQUIRED\' | translate"\n      ></nxq-control-error>\n    </div>\n\n    <div class="add-channel_form__field">\n      <nxq-label [labelType]="labelType.CODE" [value]="\'AVAILABLE_ROLES\' | translate | uppercase"></nxq-label>\n      <div class="add-channel_form__field__checkbox">\n        <ng-container *ngFor="let role of roleOptions">\n          <nxq-checkbox [control]="controls[role.value]">{{ role.label }}</nxq-checkbox>\n        </ng-container>\n\n        \x3c!--        <nxq-checkbox [control]="controls.owner">{{ \'OWNER\' | translate }}</nxq-checkbox>--\x3e\n        \x3c!--        <nxq-checkbox [control]="controls.moderator">{{ \'MODERATOR\' | translate }}</nxq-checkbox>--\x3e\n        \x3c!--        <nxq-checkbox [control]="controls.user">{{ \'USER\' | translate }}</nxq-checkbox>--\x3e\n      </div>\n    </div>\n  </form>\n\n  <div class="footer">\n    <nxq-button [type]="buttonType.PRIMARY" (click)="onClose()">{{ \'CANCEL\' | translate }}</nxq-button>\n    <nxq-button [type]="buttonType.SECONDARY" (click)="addChannel(formElement)"> {{ \'ADD\' | translate }}</nxq-button>\n  </div>\n</div>\n'},1680:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_exports__.default="/* These mixins are replacement of Flex Layout*/\n.add-channel .header {\n  font-weight: bold;\n  color: #2373ff;\n  font-size: 22px;\n}\n.add-channel_form {\n  display: flex;\n  flex-direction: row;\n  margin-top: 20px;\n}\n.add-channel_form > * {\n  margin-right: 15px;\n}\n.add-channel_form > *:last-child {\n  margin-right: 0;\n}\n.add-channel_form__field {\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n}\n.add-channel_form__field > * {\n  margin-bottom: 10px;\n}\n.add-channel_form__field > *:last-child {\n  margin-bottom: 0;\n}\n.add-channel_form__field__checkbox {\n  margin-top: 10px;\n  display: flex;\n  flex-direction: row;\n}\n.add-channel_form__field__checkbox > * {\n  margin-right: 15px;\n}\n.add-channel_form__field__checkbox > *:last-child {\n  margin-right: 0;\n}\n.add-channel .footer {\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-end;\n  align-items: center;\n  align-content: center;\n  padding: 10px 20px 10px 20px;\n  background: #ffffff;\n  position: absolute;\n  right: 0px;\n  bottom: 0px;\n  border-top: 1px solid lightgray;\n  box-shadow: 0px 0px 10px 2px rgba(187, 187, 187, 0.7);\n  z-index: 1;\n}\n.add-channel .footer > * {\n  margin-right: 13px;\n}\n.add-channel .footer > *:last-child {\n  margin-right: 0;\n}"},1681:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_exports__.default='<div class="add-channel-members">\n  <nxq-filters></nxq-filters>\n  <div class="role-filters">\n    <span class="label">{{ \'SELECT_ROLE\' | translate | uppercase }}</span>\n    <nxq-select width="240px" [control]="roleControl" [options]="roleOptions"></nxq-select>\n  </div>\n  <nxq-table\n    [tableHeaders]="headers"\n    [tableData]="data"\n    [enableSelect]="enableSelect"\n    (filtersChanged)="filters($event)"\n    (rowsSelected)="rowsSelected($event)"\n  >\n  </nxq-table>\n\n  <div class="footer-buttons">\n    <nxq-button [type]="buttonType.PRIMARY" (click)="onClose()">{{ \'CANCEL\' | translate }}</nxq-button>\n    <nxq-button [type]="buttonType.SECONDARY" (click)="addMembers()">{{ \'ADD_MEM\' | translate }}</nxq-button>\n  </div>\n</div>\n'},1682:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_exports__.default="/* These mixins are replacement of Flex Layout*/\n.add-channel-members {\n  display: flex;\n  flex-direction: column;\n}\n.add-channel-members > * {\n  margin-bottom: 20px;\n}\n.add-channel-members > *:last-child {\n  margin-bottom: 0;\n}\n.add-channel-members .role-filters {\n  display: flex;\n  flex-direction: column;\n  margin-left: 20px;\n}\n.add-channel-members nxq-table {\n  max-height: 65vh;\n  overflow-y: scroll;\n}\n.add-channel-members .footer-buttons {\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-end;\n  align-items: center;\n  align-content: center;\n  padding: 10px 20px 10px 20px;\n  background: #ffffff;\n  position: absolute;\n  right: 0px;\n  bottom: 0px;\n  border-top: 1px solid lightgray;\n  box-shadow: 0px 0px 10px 2px rgba(187, 187, 187, 0.7);\n  z-index: 1;\n}\n.add-channel-members .footer-buttons > * {\n  margin-right: 13px;\n}\n.add-channel-members .footer-buttons > *:last-child {\n  margin-right: 0;\n}"},1683:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_exports__.default='<div class="update-channel-members">\n  <nxq-filters></nxq-filters>\n\n  <nxq-table\n    [tableHeaders]="headers"\n    [tableData]="data"\n    [enableSelect]="enableSelect"\n    (filtersChanged)="filters($event)"\n    (rowsSelected)="rowsSelected($event)"\n  >\n  </nxq-table>\n\n  <div class="footer-buttons">\n    <nxq-button [type]="buttonType.PRIMARY" (click)="onClose()">{{ \'CANCEL\' | translate }}</nxq-button>\n    <nxq-button\n      [type]="buttonType.PRIMARY"\n      nz-popconfirm\n      [nzPopconfirmTitle]="\'Remove\'"\n      nzPopconfirmPlacement="bottomLeft"\n      nzOverlayClassName="nxq-overlay"\n      [nzCancelText]="\'CANCEL\' | translate"\n      [nzOkText]="\'CONFIRM\' | translate"\n      (nzOnConfirm)="onRemove()"\n    >\n      {{ \'REMOVE_MEM\' | translate }}</nxq-button\n    >\n    <nxq-button\n      [type]="buttonType.PRIMARY"\n      nz-popover\n      [nzPopoverContent]="contentTemplate"\n      [nzPopoverTitle]="null"\n      nzPopoverPlacement="bottomRight"\n      nzPopoverTrigger="click"\n      [(nzVisible)]="assignRolePopupVisible"\n      [nzOverlayStyle]="{ width: \'fit-content\' }"\n      >{{ \'ASSIGN_ROLE\' | translate }}</nxq-button\n    >\n\n    <ng-template #contentTemplate>\n      <div class="assign-role">\n        <nxq-header [title]="\'Choose role\'" [headerType]="headerType.CARD"></nxq-header>\n        <nxq-select [width]="\'unset\'" [minWidth]="\'150px\'" [control]="roleControl" [options]="roleOptions"></nxq-select>\n        <nxq-button [type]="buttonType.SECONDARY" (click)="onAssign()">{{ \'CONFIRM\' | translate }}</nxq-button>\n        <nxq-button [type]="buttonType.PRIMARY" (click)="closeAssignRolePopup()">{{ \'CANCEL\' | translate }}</nxq-button>\n      </div>\n    </ng-template>\n  </div>\n</div>\n'},1684:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_exports__.default="/* These mixins are replacement of Flex Layout*/\n.update-channel-members {\n  display: flex;\n  flex-direction: column;\n}\n.update-channel-members > * {\n  margin-bottom: 20px;\n}\n.update-channel-members > *:last-child {\n  margin-bottom: 0;\n}\n.update-channel-members nxq-table {\n  max-height: 65vh;\n  overflow-y: scroll;\n}\n.update-channel-members .footer-buttons {\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-end;\n  align-items: center;\n  align-content: center;\n  padding: 10px 20px 10px 20px;\n  background: #ffffff;\n  position: absolute;\n  right: 0px;\n  bottom: 0px;\n  border-top: 1px solid lightgray;\n  box-shadow: 0px 0px 10px 2px rgba(187, 187, 187, 0.7);\n  z-index: 1;\n}\n.update-channel-members .footer-buttons > * {\n  margin-right: 13px;\n}\n.update-channel-members .footer-buttons > *:last-child {\n  margin-right: 0;\n}"},1696:function(module,exports){},1710:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"ManageChannelsModule",(function(){return ManageChannelsModule}));var tslib_es6=__webpack_require__(1),core=__webpack_require__(0),common=__webpack_require__(6),shared_module=__webpack_require__(587),router=__webpack_require__(35),public_api=__webpack_require__(12),unsubscribe=__webpack_require__(216),distinctUntilChanged=__webpack_require__(79),take=__webpack_require__(85),tap=__webpack_require__(73),datorama_akita=__webpack_require__(244);let channels_store_ChannelsStore=class ChannelsStore extends datorama_akita.a{constructor(){super({loaded:!1,loading:!1,adding:!1,deleting:!1,query:""})}};var _a;channels_store_ChannelsStore=Object(tslib_es6.c)([Object(core.Injectable)({providedIn:"root"}),Object(datorama_akita.c)({name:"channels"}),Object(tslib_es6.f)("design:paramtypes",[])],channels_store_ChannelsStore);let channels_query_ChannelsQuery=class ChannelsQuery extends datorama_akita.b{constructor(store){super(store),this.store=store}selectChannels(){return this.selectAll()}selectChannelById(id){return this.selectEntity(id)}};channels_query_ChannelsQuery=Object(tslib_es6.c)([Object(core.Injectable)({providedIn:"root"}),Object(tslib_es6.f)("design:paramtypes",["function"==typeof(_a=void 0!==channels_store_ChannelsStore&&channels_store_ChannelsStore)?_a:Object])],channels_query_ChannelsQuery);var channels_manager_a,_b,_c,rocket_chat_service=__webpack_require__(1422),utils=__webpack_require__(586);let channels_manager_ChannelsManager=class ChannelsManager{constructor(channelsStore,channelsQuery,rocketChatService){this.channelsStore=channelsStore,this.channelsQuery=channelsQuery,this.rocketChatService=rocketChatService}getLoading(){return this.channelsQuery.selectLoading()}getLoaded(){return this.channelsQuery.select("loaded")}getAdding(){return this.channelsQuery.select("adding")}getDeleting(){return this.channelsQuery.select("deleting")}getQuery(){return this.channelsQuery.select("query")}setLoading(value){this.channelsStore.setLoading(value)}setAdding(value){this.channelsStore.update({adding:value})}setDeleting(value){this.channelsStore.update({deleting:value})}setQuery(value){this.channelsStore.update({query:value})}getChannels(force=!1){this.combinedSubscription&&this.combinedSubscription.unsubscribe();const query$=this.getQuery().pipe(Object(distinctUntilChanged.a)());return this.combinedSubscription=query$.subscribe(()=>{this.searchSubscription&&(this.setLoading(!1),this.searchSubscription.unsubscribe()),this.fetchChannels(!0)}),this.channelsQuery.selectChannels()}fetchChannels(force=!1){let loading=!1,loaded=!1,query="";this.getLoading().pipe(Object(take.a)(1)).subscribe(res=>loading=res),this.getLoaded().pipe(Object(take.a)(1)).subscribe(res=>loaded=res),this.getQuery().pipe(Object(take.a)(1)).subscribe(res=>query=res),loading||loaded&&!force||(this.setLoading(!0),this.searchSubscription=this.rocketChatService.getChannelList().subscribe(res=>{this.channelsStore.set(res.channels),this.channelsStore.update({loaded:!0}),this.setLoading(!1)},err=>{this.setLoading(!1)}))}createChannel(data){this.setAdding(!0);const cleanData=utils.a.removeNullAndUndefinedKeys(data);return this.rocketChatService.createChannel(cleanData).pipe(Object(tap.a)(res=>{this.setAdding(!1),this.channelsStore.add(res.channel)},err=>this.setAdding(!1)))}deleteChannel(data){this.setDeleting(!0);const cleanData=utils.a.removeNullAndUndefinedKeys(data);return this.rocketChatService.deleteChannel(cleanData).pipe(Object(tap.a)(res=>{this.setDeleting(!1),this.channelsStore.remove(data["channel-id"])},err=>{this.setDeleting(!1)}))}ngOnDestroy(){}};channels_manager_ChannelsManager=Object(tslib_es6.c)([Object(core.Injectable)(),Object(tslib_es6.f)("design:paramtypes",["function"==typeof(channels_manager_a=void 0!==channels_store_ChannelsStore&&channels_store_ChannelsStore)?channels_manager_a:Object,"function"==typeof(_b=void 0!==channels_query_ChannelsQuery&&channels_query_ChannelsQuery)?_b:Object,"function"==typeof(_c=void 0!==rocket_chat_service.a&&rocket_chat_service.a)?_c:Object])],channels_manager_ChannelsManager);var existing_channels_component_a,existing_channels_component_b,existing_channels_component_c,_d,takeUntil=__webpack_require__(29),date_utils=__webpack_require__(1414),privilege_utils=__webpack_require__(87),privilege_enum=__webpack_require__(47),translate_pipe=__webpack_require__(215),ng_zorro_antd_message=__webpack_require__(185);let existing_channels_component_ExistingChannelsComponent=class ExistingChannelsComponent extends unsubscribe.a{constructor(channelsManager,messageService,translatePipe,rocketChatService){super(),this.channelsManager=channelsManager,this.messageService=messageService,this.translatePipe=translatePipe,this.rocketChatService=rocketChatService,this.buttonType=public_api.c,this.headerType=public_api.g,this.isLoading=!0,this.roleOptions=[],this.headerSettings={pageTitle:this.translatePipe.transform("EXISTING_CHANNELS"),tagLine:this.translatePipe.transform("PLEASE_CHANGE_CHANNEL_SETTINGS")},this.addChannel=!1,this.addRemoveMembers=!1,this.formIsDirty=!1,this.existingChannelsBreadCrumbs=[{label:this.translatePipe.transform("SETTINGS"),url:"settings"},{label:this.translatePipe.transform("MANAGE_CHANNELS"),url:"manage-channels"}],this.headers=[{title:this.translatePipe.transform("CHANNEL_NAME").toUpperCase(),type:public_api.s.TEXT,property:"name",showSort:!0},{title:this.translatePipe.transform("TYPE").toUpperCase(),type:public_api.s.TEXT,property:"type",showSort:!0},{title:this.translatePipe.transform("MEMBERS").toUpperCase(),type:public_api.s.TEXT,property:"usersCount",showSort:!0},{title:this.translatePipe.transform("ACTIONS").toUpperCase(),type:public_api.s.ACTIONS,property:"",actions:[{title:this.translatePipe.transform("ADD_REMOVE_MEM"),type:public_api.r.BUTTON,value:"add-remove-members"},{title:"close-circle",type:public_api.r.ICON,value:"close-circle"}]}],this.editAllowed=privilege_utils.a.hasViewPrivileges([privilege_enum.a.SETTING,privilege_enum.a.MANAGE_LEARNING,privilege_enum.a.CHANNELS,privilege_enum.a.MANAGE_CHANNELS,privilege_enum.a.EDIT]),this.data=[],this.showPagination=!1,this.enableSelect=!0,this.selectedChannel=null}ngOnInit(){this.channelsManager.getChannels().pipe(Object(takeUntil.a)(this._destroyed$)).subscribe(res=>{this.channels=res,console.log("Channels",this.channels),this.data=this.transformChannels(res)}),this.channelsManager.getLoading().pipe(Object(takeUntil.a)(this._destroyed$)).subscribe(res=>{this.isLoading=res}),this.editAllowed||(this.headers=this.headers.filter(s=>s.type!==public_api.s.ACTIONS)),this.rocketChatService.getUserRolesList().subscribe(res=>{this.roleOptions=[...res],console.log(this.roleOptions)})}onAddChannel(){0===this.roleOptions.length?this.messageService.error(this.translatePipe.transform("NO_ROCKET_CHAT_ROLES")):(this.onClose(),this.addChannel=!0)}onDeleteChannel(channel){const data={"channel-name":channel.name,"channel-id":channel.id};this.channelsManager.deleteChannel(data).pipe(Object(takeUntil.a)(this._destroyed$)).subscribe(()=>{console.log("Deleted"),this.showModal=!1})}onAddRemoveMembers(channel){0===this.roleOptions.length?this.messageService.error(this.translatePipe.transform("NO_ROCKET_CHAT_ROLES")):(this.onClose(),this.selectedChannel=channel,this.addRemoveMembers=!0)}onClose(e){this.formIsDirty?this.showFormDirtyModal=!0:(this.addChannel=!1,this.addRemoveMembers=!1,e&&e.hasOwnProperty("event")&&"add-channel"===e.event&&this.data.push(this.transformChannels([e.data])))}actionClicked(event){"close-circle"===event.value?(this.showModal=!0,this.deleteData=event.data):"add-remove-members"===event.value&&this.onAddRemoveMembers(event.data)}filters(event){event.sortBy&&(this.data=utils.a.sortByMultipleValues(this.data,event.sortBy))}rowsSelected(event){console.log("ROWS",event)}transformChannels(data){return data.map(channel=>{const types=[];return channel.readOnly&&types.push("Read Only"),channel.broadcast&&types.push("Broadcast"),Object.assign(Object.assign({},channel),{type:types.length?types.toString():"Normal",latestActivity:channel.latestActivity?date_utils.a.convertToDateTimeString(new Date(channel.latestActivity)):""})})}onCancel(){this.showModal=!1}onConfirm(){this.onDeleteChannel(this.deleteData),this.messageService.success(this.translatePipe.transform("CHANNEL_REMOVED_SUCCESSFULLY"))}onCancelPopup(){this.showFormDirtyModal=!1}onConfirmPopup(){this.showFormDirtyModal=!1,this.addChannel=!1,this.formIsDirty=!1}formDirtyStateChanged(event){this.formIsDirty=event}};existing_channels_component_ExistingChannelsComponent=Object(tslib_es6.c)([Object(core.Component)({selector:"nxq-tenant-types",template:(__webpack_require__(1675).default||__webpack_require__(1675)).length?__webpack_require__(1675).default||__webpack_require__(1675):"",styles:[(__webpack_require__(1676).default||__webpack_require__(1676)).length?__webpack_require__(1676).default||__webpack_require__(1676):""]}),Object(tslib_es6.f)("design:paramtypes",["function"==typeof(existing_channels_component_a=void 0!==channels_manager_ChannelsManager&&channels_manager_ChannelsManager)?existing_channels_component_a:Object,"function"==typeof(existing_channels_component_b=void 0!==ng_zorro_antd_message.e&&ng_zorro_antd_message.e)?existing_channels_component_b:Object,"function"==typeof(existing_channels_component_c=void 0!==translate_pipe.a&&translate_pipe.a)?existing_channels_component_c:Object,"function"==typeof(_d=void 0!==rocket_chat_service.a&&rocket_chat_service.a)?_d:Object])],existing_channels_component_ExistingChannelsComponent);const masterManagementRoutes=[{path:"",pathMatch:"full",component:existing_channels_component_ExistingChannelsComponent,canActivate:[__webpack_require__(135).a],data:{key:[privilege_enum.a.SETTING,privilege_enum.a.MANAGE_LEARNING,privilege_enum.a.CHANNELS,privilege_enum.a.MANAGE_CHANNELS]}}];let ManageChannelsRoutingModule=class ManageChannelsRoutingModule{};ManageChannelsRoutingModule=Object(tslib_es6.c)([Object(core.NgModule)({imports:[router.l.forChild(masterManagementRoutes)],exports:[router.l]})],ManageChannelsRoutingModule);var fesm5_forms=__webpack_require__(5);let update_channel_members_component_UpdateChannelMembersComponent=class UpdateChannelMembersComponent extends unsubscribe.a{constructor(){super(),this.buttonType=public_api.c,this.headerType=public_api.g,this.orientation=public_api.m,this.selectedTab=new fesm5_forms.FormControl("option-1"),this.closeDrawer=new core.EventEmitter}ngOnInit(){}onClose(){this.closeDrawer.emit("")}};var add_channel_component_b,add_channel_component_c,add_channel_component_d,_e;Object(tslib_es6.c)([Object(core.Output)(),Object(tslib_es6.f)("design:type",Object)],update_channel_members_component_UpdateChannelMembersComponent.prototype,"closeDrawer",void 0),Object(tslib_es6.c)([Object(core.Input)(),Object(tslib_es6.f)("design:type",Object)],update_channel_members_component_UpdateChannelMembersComponent.prototype,"channel",void 0),update_channel_members_component_UpdateChannelMembersComponent=Object(tslib_es6.c)([Object(core.Component)({selector:"nxq-update-channel-members",template:(__webpack_require__(1677).default||__webpack_require__(1677)).length?__webpack_require__(1677).default||__webpack_require__(1677):"",styles:[(__webpack_require__(1678).default||__webpack_require__(1678)).length?__webpack_require__(1678).default||__webpack_require__(1678):""]}),Object(tslib_es6.f)("design:paramtypes",[])],update_channel_members_component_UpdateChannelMembersComponent);let add_channel_component_AddChannelComponent=class AddChannelComponent extends unsubscribe.a{constructor(channelsManager,rocketChatService,messageService,translatePipe){super(),this.channelsManager=channelsManager,this.rocketChatService=rocketChatService,this.messageService=messageService,this.translatePipe=translatePipe,this.buttonType=public_api.c,this.labelType=public_api.h,this.selectMode=public_api.o,this.NAME_REGEX=/^[a-z,.'-]+$/i,this.closeDrawer=new core.EventEmitter,this.formIsDirty=new core.EventEmitter,this.controls={name:new fesm5_forms.FormControl(null,[fesm5_forms.Validators.required,fesm5_forms.Validators.maxLength(128),fesm5_forms.Validators.pattern(this.NAME_REGEX)]),type:new fesm5_forms.FormControl(null,[fesm5_forms.Validators.required])},this.addChannelForm=new fesm5_forms.FormGroup(this.controls),this.channelTypeOptions=[{label:this.translatePipe.transform("BROADCAST"),value:"broadcast"},{label:this.translatePipe.transform("PRIVATE"),value:"private"}],this.roleOptions=[]}canDeactivate(event){if(this.addChannelForm.touched&&this.addChannelForm.dirty)return!1}ngOnInit(){this.rocketChatService.getUserRolesList().subscribe(res=>{this.roleOptions=[...res].map(i=>({label:i.name,value:i.id+""})),this.roleOptions.forEach(role=>{this.controls[role.value]=new fesm5_forms.FormControl(!1,[fesm5_forms.Validators.required])})}),this.addChannelForm.valueChanges.pipe(Object(takeUntil.a)(this._destroyed$)).subscribe(v=>{this.addChannelForm.dirty&&this.formIsDirty.emit(!0)})}onClose(){this.closeDrawer.emit("")}addChannel(formElement){if(this.addChannelForm.invalid)utils.a.checkFormValidity(this.addChannelForm,formElement);else{const data=this.addChannelForm.getRawValue(),roleIds=[];this.roleOptions.forEach(role=>{data[role.value]&&roleIds.push(role.value)});const channelData={name:data.name,roleIds:roleIds,readOnly:"broadcast"===this.controls.type.value,broadcast:"broadcast"===this.controls.type.value,type:this.controls.type.value};console.log(data,channelData),this.channelsManager.createChannel(channelData).pipe(Object(takeUntil.a)(this._destroyed$)).subscribe(res=>{console.log(res),this.closeDrawer.emit(""),this.formIsDirty.emit(!1),this.messageService.success(this.translatePipe.transform("CHANNEL_ADDED_SUCCESSFULLY")),this.closeDrawer.emit({event:"add-channel",data:res})})}}};Object(tslib_es6.c)([Object(core.Output)(),Object(tslib_es6.f)("design:type",Object)],add_channel_component_AddChannelComponent.prototype,"closeDrawer",void 0),Object(tslib_es6.c)([Object(core.Output)(),Object(tslib_es6.f)("design:type",Object)],add_channel_component_AddChannelComponent.prototype,"formIsDirty",void 0),Object(tslib_es6.c)([Object(core.HostListener)("window:beforeunload",["$event"]),Object(tslib_es6.f)("design:type",Function),Object(tslib_es6.f)("design:paramtypes",[Object]),Object(tslib_es6.f)("design:returntype",Object)],add_channel_component_AddChannelComponent.prototype,"canDeactivate",null),add_channel_component_AddChannelComponent=Object(tslib_es6.c)([Object(core.Component)({selector:"nxq-add-channel",template:(__webpack_require__(1679).default||__webpack_require__(1679)).length?__webpack_require__(1679).default||__webpack_require__(1679):"",styles:[(__webpack_require__(1680).default||__webpack_require__(1680)).length?__webpack_require__(1680).default||__webpack_require__(1680):""]}),Object(tslib_es6.f)("design:paramtypes",["function"==typeof(add_channel_component_b=void 0!==channels_manager_ChannelsManager&&channels_manager_ChannelsManager)?add_channel_component_b:Object,"function"==typeof(add_channel_component_c=void 0!==rocket_chat_service.a&&rocket_chat_service.a)?add_channel_component_c:Object,"function"==typeof(add_channel_component_d=void 0!==ng_zorro_antd_message.e&&ng_zorro_antd_message.e)?add_channel_component_d:Object,"function"==typeof(_e=void 0!==translate_pipe.a&&translate_pipe.a)?_e:Object])],add_channel_component_AddChannelComponent);var add_channel_members_component_a,add_channel_members_component_b,add_channel_members_component_c,add_channel_members_component_d,channel_model=__webpack_require__(1696);let add_channel_members_component_AddChannelMembersComponent=class AddChannelMembersComponent extends unsubscribe.a{constructor(rocketChatService,messageService,translatePipe){super(),this.rocketChatService=rocketChatService,this.messageService=messageService,this.translatePipe=translatePipe,this.buttonType=public_api.c,this.headerType=public_api.g,this.closeDrawer=new core.EventEmitter,this.roleControl=new fesm5_forms.FormControl(null),this.headers=[{title:this.translatePipe.transform("USER_NAME").toUpperCase(),type:public_api.s.TEXT,property:"name",showSort:!0},{title:this.translatePipe.transform("ENTITY").toUpperCase(),type:public_api.s.TEXT,property:"entity",showSort:!0},{title:this.translatePipe.transform("DESIGNATION").toUpperCase(),type:public_api.s.TEXT,property:"designation",showSort:!0},{title:this.translatePipe.transform("EMAIL").toUpperCase(),type:public_api.s.TEXT,property:"email",showSort:!0}],this.users=[],this.data=[],this.selectedUsersIds=[],this.enableSelect=!0,this.roleOptions=[]}ngOnInit(){this.rocketChatService.getUsersList(this.channel.id,!1).subscribe(res=>{this.setData(res)}),this.rocketChatService.getChannelRolesList(this.channel.id).subscribe(res=>{this.roleOptions=[...res].map(i=>({label:i.name,value:i.id+""})),this.roleControl.setValue(this.roleOptions[0].value)})}filters(event){event.search?this.data=[...this.users.filter(user=>user.userName.toLowerCase().includes(event.search.toLowerCase())||user.email.toLowerCase().includes(event.search.toLowerCase()))]:this.data=[...this.users]}rowsSelected(event){this.selectedUsersIds=event}onClose(){this.closeDrawer.emit("")}addMembers(){const newData=[...this.data].filter(x=>!this.selectedUsersIds.includes(x.id)),data=[...this.users].filter(user=>!!this.selectedUsersIds.includes(user.id)).map(v=>({connectId:v.connectId,designation:v.designation,email:v.email,entity:v.entity,name:v.name,roleId:+this.roleControl.value}));console.log("ADD USER",data,this.selectedUsersIds),this.rocketChatService.addUsersInChannel(this.channel.id,data).subscribe(res=>{console.log(res),this.data=[...newData],this.messageService.success("MEMBER_ADDED_SUCCESSFULLY")})}setData(data){this.users=data.map((user,index)=>Object.assign(Object.assign({},user),{id:index+1,role:"User"})),this.data=[...this.users]}};Object(tslib_es6.c)([Object(core.Input)(),Object(tslib_es6.f)("design:type","function"==typeof(add_channel_members_component_a=void 0!==channel_model.Channel&&channel_model.Channel)?add_channel_members_component_a:Object)],add_channel_members_component_AddChannelMembersComponent.prototype,"channel",void 0),Object(tslib_es6.c)([Object(core.Output)(),Object(tslib_es6.f)("design:type",Object)],add_channel_members_component_AddChannelMembersComponent.prototype,"closeDrawer",void 0),add_channel_members_component_AddChannelMembersComponent=Object(tslib_es6.c)([Object(core.Component)({selector:"nxq-add-channel-members",template:(__webpack_require__(1681).default||__webpack_require__(1681)).length?__webpack_require__(1681).default||__webpack_require__(1681):"",styles:[(__webpack_require__(1682).default||__webpack_require__(1682)).length?__webpack_require__(1682).default||__webpack_require__(1682):""]}),Object(tslib_es6.f)("design:paramtypes",["function"==typeof(add_channel_members_component_b=void 0!==rocket_chat_service.a&&rocket_chat_service.a)?add_channel_members_component_b:Object,"function"==typeof(add_channel_members_component_c=void 0!==ng_zorro_antd_message.e&&ng_zorro_antd_message.e)?add_channel_members_component_c:Object,"function"==typeof(add_channel_members_component_d=void 0!==translate_pipe.a&&translate_pipe.a)?add_channel_members_component_d:Object])],add_channel_members_component_AddChannelMembersComponent);var view_channel_members_component_a,view_channel_members_component_b,view_channel_members_component_c,view_channel_members_component_d,forkJoin=__webpack_require__(569);let view_channel_members_component_ViewChannelMembersComponent=class ViewChannelMembersComponent extends unsubscribe.a{constructor(rocketChatService,messageService,translatePipe){super(),this.rocketChatService=rocketChatService,this.messageService=messageService,this.translatePipe=translatePipe,this.buttonType=public_api.c,this.headerType=public_api.g,this.closeDrawer=new core.EventEmitter,this.roleOptions=[],this.headers=[{title:this.translatePipe.transform("USER_NAME").toUpperCase(),type:public_api.s.TEXT,property:"name",showSort:!0},{title:this.translatePipe.transform("ENTITY").toUpperCase(),type:public_api.s.TEXT,property:"entity",showSort:!0},{title:this.translatePipe.transform("DESIGNATION").toUpperCase(),type:public_api.s.TEXT,property:"designation",showSort:!0},{title:this.translatePipe.transform("EMAIL").toUpperCase(),type:public_api.s.TEXT,property:"email",showSort:!0},{title:this.translatePipe.transform("ROLE").toUpperCase(),type:public_api.s.TEXT,property:"role",showSort:!0}],this.channelUsers=[],this.data=[],this.selectedChannelUsersIds=[],this.enableSelect=!0,this.roleControl=new fesm5_forms.FormControl("Moderator")}ngOnInit(){const roles$=this.rocketChatService.getChannelRolesList(this.channel.id),users$=this.rocketChatService.getUsersList(this.channel.id);Object(forkJoin.a)([roles$,users$]).pipe(Object(takeUntil.a)(this._destroyed$)).subscribe(([roles,users])=>{this.channelUsers=users,this.roleOptions=roles.map(r=>({label:r.name,value:r.id+""})),this.data=[...this.channelUsers].map((item,index)=>{const roleOption=this.roleOptions.filter(r=>r.value===item.roleId+"")[0],role=roleOption?roleOption.label:"";return Object.assign(Object.assign({},item),{id:index,role:role})})})}filters(event){event.search?this.data=[...this.channelUsers.filter(user=>user.userName.toLowerCase().includes(event.search.toLowerCase())||user.email.toLowerCase().includes(event.search.toLowerCase()))]:this.data=[...this.channelUsers]}rowsSelected(event){this.selectedChannelUsersIds=this.data.filter((item,index)=>event.includes(index)).map(i=>i.connectId)}onRemove(){if(1===this.selectedChannelUsersIds.length)this.rocketChatService.removeUserFromChannel(this.channel.id,this.selectedChannelUsersIds[0]).subscribe(_=>{this.messageService.success(this.translatePipe.transform("MEMBER_REMOVED_SUCCESSFULLY")),this.refreshData()});else if(this.selectedChannelUsersIds.length>1&&this.selectedChannelUsersIds.length<this.data.length){const data=this.data.filter(x=>this.selectedChannelUsersIds.includes(x.connectId));this.rocketChatService.removeUserInBulkFromChannel(this.channel.id,data).subscribe(_=>{this.messageService.success(this.translatePipe.transform("MEMBER_REMOVED_SUCCESSFULLY")),this.refreshData()})}else this.selectedChannelUsersIds.length===this.data.length?this.rocketChatService.removeAllUsersFromChannel(this.channel.id).subscribe(_=>{this.messageService.success(this.translatePipe.transform("MEMBER_REMOVED_SUCCESSFULLY")),this.refreshData()}):this.messageService.error(this.translatePipe.transform("PLEASE_SELECT_MEMBER"))}onAssign(){const roleId=this.roleControl.value,data=[...this.channelUsers].filter(user=>!!this.selectedChannelUsersIds.includes(user.connectId)).map(v=>({connectId:v.connectId,designation:v.designation,email:v.email,entity:v.entity,name:v.name,roleId:+roleId})),role=this.roleOptions.filter(r=>r.value===roleId)[0].label,newData=[...this.data].map(user=>this.selectedChannelUsersIds.includes(user.connectId)?Object.assign(Object.assign({},user),{role:role}):user);this.rocketChatService.updateChannelUsersRole(this.channel.id,data).subscribe(res=>{console.log(res),this.data=[...newData],this.messageService.success(this.translatePipe.transform("ROLE_UPDATED")),this.assignRolePopupVisible=!1})}closeAssignRolePopup(){this.assignRolePopupVisible=!1}onClose(){this.closeDrawer.emit("")}refreshData(){this.messageService.success(this.translatePipe.transform("MEMBERS_REMOVED")),this.data=this.data.filter(x=>!this.selectedChannelUsersIds.includes(x.connectId)),this.selectedChannelUsersIds=[]}};Object(tslib_es6.c)([Object(core.Output)(),Object(tslib_es6.f)("design:type",Object)],view_channel_members_component_ViewChannelMembersComponent.prototype,"closeDrawer",void 0),Object(tslib_es6.c)([Object(core.Input)(),Object(tslib_es6.f)("design:type","function"==typeof(view_channel_members_component_a=void 0!==channel_model.Channel&&channel_model.Channel)?view_channel_members_component_a:Object)],view_channel_members_component_ViewChannelMembersComponent.prototype,"channel",void 0),view_channel_members_component_ViewChannelMembersComponent=Object(tslib_es6.c)([Object(core.Component)({selector:"nxq-view-channel-members",template:(__webpack_require__(1683).default||__webpack_require__(1683)).length?__webpack_require__(1683).default||__webpack_require__(1683):"",styles:[(__webpack_require__(1684).default||__webpack_require__(1684)).length?__webpack_require__(1684).default||__webpack_require__(1684):""]}),Object(tslib_es6.f)("design:paramtypes",["function"==typeof(view_channel_members_component_b=void 0!==rocket_chat_service.a&&rocket_chat_service.a)?view_channel_members_component_b:Object,"function"==typeof(view_channel_members_component_c=void 0!==ng_zorro_antd_message.e&&ng_zorro_antd_message.e)?view_channel_members_component_c:Object,"function"==typeof(view_channel_members_component_d=void 0!==translate_pipe.a&&translate_pipe.a)?view_channel_members_component_d:Object])],view_channel_members_component_ViewChannelMembersComponent);const COMPONENTS=[...[existing_channels_component_ExistingChannelsComponent],...[add_channel_component_AddChannelComponent,add_channel_members_component_AddChannelMembersComponent,view_channel_members_component_ViewChannelMembersComponent,update_channel_members_component_UpdateChannelMembersComponent]];let ManageChannelsModule=class ManageChannelsModule{};ManageChannelsModule=Object(tslib_es6.c)([Object(core.NgModule)({declarations:[...COMPONENTS],imports:[common.b,shared_module.a,ManageChannelsRoutingModule],exports:[...COMPONENTS],providers:[],entryComponents:[add_channel_component_AddChannelComponent,update_channel_members_component_UpdateChannelMembersComponent]})],ManageChannelsModule)}}]);
//# sourceMappingURL=17.8083e24f987c35a716b3.bundle.js.map